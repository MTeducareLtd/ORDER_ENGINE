using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Diagnostics;
//using System.Data.SqlClient.SqlDataReader;
//using Exportxls.BL;
using System.Data.SqlClient;
using System.Configuration;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.IO;
using ShoppingCart.BL;
//using Exportxls.BL;
//using Encryption.BL;

public partial class Payments_Receive : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e)
    {

        try
        {
            if (!IsPostBack)
            {
                string Menuid = "117";
                if (Request.Cookies["MyCookiesLoginInfo"] != null)
                {
                    HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
                    string UserID = cookie.Values["UserID"];
                    string UserName = cookie.Values["UserName"];
                    //lblpagetitle1.Text = "Manage Payment"
                    //lblpagetitle2.Text = "Search Panel"
                    //limidbreadcrumb.Visible = True
                    //lblmidbreadcrumb.Text = "Manage Payment"
                    //lilastbreadcrumb.Visible = False
                    //divSuccessmessage.Visible = False
                    //divErrormessage.Visible = False
                    //lbltabname.Text = "Search by"
                    //upnlsearch.Visible = True
                    //Upnlviewledger.Visible = False
                    //Upnlprintreceipt.Visible = False
                    //upnlconvert.Visible = False
                    //System.Threading.Thread.Sleep(1000)
                    //listudentstatus.Visible = False
                    //btnviewenrollment.Visible = False
                    //liregno.Visible = True

                    ///'''''''''''''''''''
                    //System.Threading.Thread.Sleep(1000)
                    upnlsearch.Visible = false;
                    Upnlviewledger.Visible = true;
                    Upnlprintreceipt.Visible = false;
                    upnlconvert.Visible = false;
                    lblpagetitle1.Text = "Receive Payments";
                    lblpagetitle2.Text = "";
                    limidbreadcrumb.Visible = true;
                    lblmidbreadcrumb.Text = "Manage Payments";
                    lilastbreadcrumb.Visible = true;
                    lbllastbreadcrumb.Text = "Receive Payments";
                    divSuccessmessage.Visible = false;
                    divErrormessage.Visible = false;
                    //lbltabname1.Text = "Student Ledger"
                    string Cur_Sb_Code = "";
                    Cur_Sb_Code = Request["Cur_sb_code"];
                    Session["CUR_SB_Code"] = Request["Cur_sb_code"];
                    diverrorPayment.Visible = false;
                    divSuccessPayment.Visible = false;
                    btnviewenrollment.Visible = true;
                    Bindlist(Cur_Sb_Code);
                    BindStudentSubjectGroup(Cur_Sb_Code);
                    Bindpayment(Cur_Sb_Code);
                    //BindPaymode()
                    BindStudentLedger();
                    BindChequeOutstanding();
                    //BindPayhead()
                    Bindrequestdetails();
                    diveditpayemnt.Visible = false;
                    string oppid = txtopportunityid.Text;
                    HtmlAnchor viewenrollment = btnviewenrollment;
                    viewenrollment.HRef = "Enrollment_display.aspx?&Oppur_id=" + oppid;
                    dlpaymentreceipt.Visible = true;
                    divpayment.Visible = false;
                    txtpaydate.Text = DateTime.Now.ToString("dd-MM-yyyy");
                    tblbankdetails.Visible = false;
                    tblcash.Visible = false;
                    tblcheque.Visible = false;
                    tblDD.Visible = false;
                    ///'''''''''''''''''''''''''''''''''''''''''''''''''''''''


                    SqlDataReader dr = UserController.Getuserrights(UserID, Menuid);
                    try
                    {
                        if ((((dr) != null)))
                        {
                            if (dr.Read())
                            {
                                int allowdisplay =Convert.ToInt32(dr["Allow_Add"].ToString());
                                if (allowdisplay == 1)
                                {
                                    //btnaddlead.Visible = True
                                    //btnimportlead.Visible = True
                                }
                                else
                                {
                                    //btnaddlead.Visible = False
                                    //btnimportlead.Visible = False
                                }

                            }
                        }


                    }
                    catch (Exception ex)
                    {
                    }
                    string UserCompany = "";
                    //Dim Userdivision As String = ""
                    SqlDataReader dr1 = UserController.GetCompanyby_Userid(UserID);
                    try
                    {
                        if ((((dr1) != null)))
                        {
                            if (dr1.Read())
                            {
                                UserCompany = dr1["Company_Code"].ToString();
                                //Userdivision = dr1("Source_Division_Code").ToString
                            }
                        }

                    }
                    catch (Exception ex)
                    {
                    }
                    lblusercompany.Text = UserCompany;
                    //lbluserdivision.Text = Userdivision
                    if (lblusercompany.Text == "MPUC1")
                    {
                        tdapplicationid.Visible = true;
                        tdapplicationid1.Visible = true;
                    }
                    else
                    {
                        tdapplicationid.Visible = false;
                        tdapplicationid1.Visible = false;

                    }
                    divmessage.Visible = false;
                    divSearch.Visible = true;
                    divsearchresults.Visible = false;
                    diveditpayemnt.Visible = false;
                    BindCompany();
                    BindPayplan();
                    BindProductCategory();
                    StudentType();
                    Institutetype();
                    CountrySearch();
                    Board();
                    Eventtype();
                }
                else
                {
                    Response.Redirect("login.aspx");
                }

            }
            GetSumvalue();
            GetSumvaluedd();
            GetSumvaluecash();
            divErrormessage.Visible = false;
        }
        catch (Exception ex)
        {
            divErrormessage.Visible = true;
            lblerrormessage.Visible = true;
            lblerrormessage.Text = ex.Message;
        }


    }

    private void BindDDL(DropDownList ddl, DataSet ds, string txtField, string valField)
    {
        ddl.DataSource = ds;
        ddl.DataTextField = txtField;
        ddl.DataValueField = valField;
        ddl.DataBind();
    }
    private void StudentType()
    {
        DataSet ds = ProductController.GetAllStudentType();
        BindDDL(ddlcustomertypesearch, ds, "Description", "Cust_Grp");
        ddlcustomertypesearch.Items.Insert(0, "All");
        ddlcustomertypesearch.SelectedIndex = 0;
    }
    private void Institutetype()
    {
        DataSet ds = ProductController.GetallInstituteType();
        BindDDL(ddlinstitutionsearch, ds, "Description", "ID");
        ddlinstitutionsearch.Items.Insert(0, "All");
        ddlinstitutionsearch.SelectedIndex = 0;
    }
    private void Eventtype()
    {
        DataSet ds = ProductController.GetallEventtype();
        BindDDL(ddlevent, ds, "event_description", "event_type");
        ddlevent.Items.Insert(0, "All");
        ddlevent.SelectedIndex = 0;
    }

    protected void ddlinstitutionsearch_SelectedIndexChanged(object sender, System.EventArgs e)
    {
        DataSet ds = ProductController.GetallCurrentStudyingin(ddlinstitutionsearch.SelectedValue);
        BindDDL(ddlstandardsearch, ds, "Description", "ID");
        this.ddlstandardsearch.Items.Insert(0, "All");
        this.ddlstandardsearch.SelectedIndex = 0;
    }
    private void Board()
    {
        DataSet ds = ProductController.GetallBoard();
        BindDDL(ddlboardsearch, ds, "Short_Description", "ID");
        ddlboardsearch.Items.Insert(0, "All");
        ddlboardsearch.SelectedIndex = 0;
        ddlstandardsearch.Items.Insert(0, "All");
        ddlstandardsearch.SelectedIndex = 0;
    }
    private void BindProductCategory()
    {
        DataSet ds = ProductController.GetallOpporProductCategory();
        BindDDL(ddlproductcategory, ds, "Description", "ID");
        ddlproductcategory.Items.Insert(0, "All");
        ddlproductcategory.SelectedIndex = 0;
    }
    private void CountrySearch()
    {
        DataSet ds = ProductController.GetallCountry();
        BindDDL(ddlcountrysearch, ds, "Country_Name", "Country_Code");
        ddlcountrysearch.Items.Insert(0, "All");
        ddlcountrysearch.SelectedIndex = 0;
        ddlstatesearch.Items.Insert(0, "All");
        ddlstatesearch.SelectedIndex = 0;
        ddlcitysearch.Items.Insert(0, "All");
        ddlcitysearch.SelectedIndex = 0;
        ddllocationsearch.Items.Insert(0, "All");
        ddllocationsearch.SelectedIndex = 0;
    }
    protected void ddlcountrysearch_SelectedIndexChanged(object sender, System.EventArgs e)
    {
        BindStateSearch();
    }
    protected void ddlstatesearch_SelectedIndexChanged(object sender, System.EventArgs e)
    {
        BindCitySearch();
    }
    protected void ddlcitysearch_SelectedIndexChanged(object sender, System.EventArgs e)
    {
        BindLocationSearch();
    }
    private void BindStateSearch()
    {
        DataSet ds = ProductController.GetallStatebyCountry(ddlcountrysearch.SelectedValue);
        BindDDL(ddlstatesearch, ds, "State_Name", "State_Code");
        ddlstatesearch.Items.Insert(0, "Select");
        ddlstatesearch.SelectedIndex = 0;
    }
    private void BindCitySearch()
    {
        DataSet ds = ProductController.GetallCitybyState(ddlstatesearch.SelectedValue);
        BindDDL(ddlcitysearch, ds, "City_Name", "City_Code");
        ddlcitysearch.Items.Insert(0, "Select");
        ddlcitysearch.SelectedIndex = 0;
    }
    private void BindLocationSearch()
    {
        DataSet ds = ProductController.GetallLocationbycity(ddlcitysearch.SelectedValue);
        BindDDL(ddllocationsearch, ds, "Location_Name", "Location_Code");
        ddllocationsearch.Items.Insert(0, "All");
        ddllocationsearch.SelectedIndex = 0;
    }

    private void BindCompany()
    {
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        DataSet ds = ProductController.GetUser_Company_Division_Zone_Center(1, UserID, "", "", "");
        BindDDL(ddlcompany, ds, "Company_Name", "Company_Code");
        //ddlcompany.Items.Insert(0, "All")
        //ddlcompany.SelectedIndex = 1
        BindDivision();
        //ddldivision.Items.Insert(0, "All")
        //ddldivision.SelectedIndex = 0

        ddlzone.Items.Insert(0, "All");
        ddlzone.SelectedIndex = 0;

        ddlcenter.Items.Insert(0, "All");
        ddlcenter.SelectedIndex = 0;

        ddlacademicyear.Items.Insert(0, "All");
        ddlacademicyear.SelectedIndex = 0;

        ddlstream.Items.Insert(0, "All");
        ddlstream.SelectedIndex = 0;
    }

    protected void ddlcompany_SelectedIndexChanged(object sender, System.EventArgs e)
    {
        BindDivision();
    }

    private void BindDivision()
    {
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        DataSet ds = ProductController.GetUser_Company_Division_Zone_Center(2, UserID, "", "", ddlcompany.SelectedValue);
        BindDDL(ddldivision, ds, "Division_Name", "Division_Code");
        ddldivision.Items.Insert(0, "All");
        ddldivision.SelectedIndex = 0;
    }

    protected void ddldivision_SelectedIndexChanged(object sender, System.EventArgs e)
    {
        BindZone();
        BindCenter();
    }

    private void BindZone()
    {
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        DataSet ds = ProductController.GetUser_Company_Division_Zone_Center(3, UserID, ddldivision.SelectedValue, "", ddlcompany.SelectedValue);
        BindDDL(ddlzone, ds, "Zone_Name", "Zone_Code");
        ddlzone.Items.Insert(0, "All");
        ddlzone.SelectedIndex = 0;
    }
    private void BindCenter()
    {
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];

        DataSet ds = ProductController.GetUser_Company_Division_Zone_Center(5, UserID, ddldivision.SelectedValue, "", ddlcompany.SelectedValue);
        BindDDL(ddlcenter, ds, "Center_name", "Center_Code");
        ddlcenter.Items.Insert(0, "All");
        ddlcenter.SelectedIndex = 0;
    }
    protected void ddlcenter_SelectedIndexChanged(object sender, System.EventArgs e)
    {
        BindAcademicYear();
    }
    private void BindAcademicYear()
    {
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        DataSet ds = ProductController.GetAcademicYearbyCenter(ddlcenter.SelectedValue);
        BindDDL(ddlacademicyear, ds, "AY_String", "AY_String");
        ddlacademicyear.Items.Insert(0, "All");
        ddlacademicyear.SelectedIndex = 0;
    }
    protected void ddlacademicyear_SelectedIndexChanged(object sender, System.EventArgs e)
    {
        BindStream();
    }
    private void BindStream()
    {
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        DataSet ds = ProductController.GetStreamby_Center_AcademicYear(ddlcenter.SelectedValue, ddlacademicyear.SelectedValue);
        BindDDL(ddlstream, ds, "Stream_Sdesc", "Stream_Code");
        ddlstream.Items.Insert(0, "All");
        ddlstream.SelectedIndex = 0;
    }

    protected void btnsearch_ServerClick(object sender, System.EventArgs e)
    {
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        string StudentName = "";
        string Applicationno = "";
        string Company = "";
        string Division = "";
        string Zone = "";
        string Center = "";
        string AcademicYear = "";
        string Stream = "";

        StudentName = txtstudentname.Text;
        Applicationno = txtapplicationno.Text;
        Company = ddlcompany.SelectedValue;
        Division = ddldivision.SelectedValue;
        Zone = ddlzone.SelectedValue;
        Center = ddlcenter.SelectedValue;
        AcademicYear = ddlacademicyear.SelectedValue;
        Stream = ddlstream.SelectedValue;

        string Customer_Type = "";
        string Institutiontype = "";
        string Boardid = "";
        string Standard = "";
        string Mobile = "";
        string Country = "";
        string State = "";
        string City = "";
        string Location = "";
        string Productcategory = "";
        string Fromdate = "";
        string Todate = "";
        string OrderStatus = "";
        string Sbentrycode = "";
        string Active = "";
        string Promoted = "";
        if (Chkactive.Checked == true)
        {
            Active = "1";
        }
        else
        {
            Active = "0";
        }
        if (chkpromoted.Checked == true)
        {
            Promoted = "1";
        }
        else
        {
            Promoted = "0";
        }

        Customer_Type = ddlcustomertypesearch.SelectedValue;
        Institutiontype = ddlinstitutionsearch.SelectedValue;
        Boardid = ddlboardsearch.SelectedValue;
        Standard = ddlstandardsearch.SelectedValue;
        Mobile = txthandphonesearch.Text;
        Country = ddlcountrysearch.SelectedValue;
        State = ddlstatesearch.SelectedValue;
        City = ddlcitysearch.SelectedValue;
        Location = ddllocationsearch.SelectedValue;
        Productcategory = ddlproductcategory.SelectedValue;
        Fromdate = txteventdatefrom.Text;
        Todate = txteventdateto.Text;
        OrderStatus = ddlorderstatus.SelectedValue;
        Sbentrycode = txtsbentrycode.Text;
        //If chkfollowup.Checked = True Then
        //    followup_overdue = 1
        //Else
        //    followup_overdue = 0
        //End If



        DataSet ds = AccountController.Get_Account_Search_Results(StudentName, Applicationno, Company, Division, Zone, Center, AcademicYear, Stream, UserID, Customer_Type,
        Institutiontype, Boardid, Standard, Mobile, Country, State, City, Location, Productcategory, Fromdate,
        Todate, OrderStatus, Sbentrycode, Active, Promoted);

        PagedDataSource Pds1 = new PagedDataSource();
        Pds1.DataSource = ds.Tables[0].DefaultView;
        Pds1.AllowPaging = true;
        Pds1.PageSize = 10;
        Pds1.CurrentPageIndex = Currentpage;
        lbl1.Text = "Showing " + (Currentpage + 1).ToString() + " of " + Pds1.PageCount.ToString();
        btnprevious.Enabled = !Pds1.IsFirstPage;
        Btnnext.Enabled = !Pds1.IsLastPage;

        if (ds.Tables[0].Rows.Count > 0)
        {
            Divsearchcriteria.Visible = false;
            lblpagetitle1.Text = "Manage Account";
            lblpagetitle2.Text = "Search Results";
            limidbreadcrumb.Visible = true;
            lblmidbreadcrumb.Text = "Manage Account";
            lilastbreadcrumb.Visible = true;
            lbllastbreadcrumb.Text = " Account Search Results";
            //lilastbreadcrumb.Visible = True

            //lbltabname.Text = "Search Results"
            divSuccessmessage.Visible = false;
            divErrormessage.Visible = false;
            divsearchresults.Visible = true;
            divmessage.Visible = false;
            System.Threading.Thread.Sleep(1000);
            dlsearch.DataSource = Pds1;
            dlsearch.DataBind();
            script1.RegisterAsyncPostBackControl(dlsearch);
        }
        else
        {
            divsearchresults.Visible = false;
            Divsearchcriteria.Visible = true;
            divmessage.Visible = true;
            lblmessage.Text = "No Records Found!";
        }
    }
    public int Currentpage
    {
        get
        {
            object s1 = this.ViewState["Currentpage"];
            if (s1 == null)
            {
                return 0;
            }
            else
            {
                return Convert.ToInt32(s1);
            }
        }
        set { this.ViewState["Currentpage"] = value; }
    }

    protected void btnprevious_Click(object sender, System.EventArgs e)
    {
        Currentpage -= 1;
        BindSearch();
    }

    protected void Btnnext_Click(object sender, System.EventArgs e)
    {
        Currentpage += 1;
        BindSearch();
    }

    private void BindSearch()
    {
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        string StudentName = "";
        string Applicationno = "";
        string Company = "";
        string Division = "";
        string Zone = "";
        string Center = "";
        string AcademicYear = "";
        string Stream = "";

        StudentName = txtstudentname.Text;
        Applicationno = txtapplicationno.Text;
        Company = lblusercompany.Text;
        //ddlcompany.SelectedValue
        Division = ddldivision.SelectedValue;
        Zone = ddlzone.SelectedValue;
        Center = ddlcenter.SelectedValue;
        AcademicYear = ddlacademicyear.SelectedValue;
        Stream = ddlstream.SelectedValue;

        string Customer_Type = "";
        string Institutiontype = "";
        string Boardid = "";
        string Standard = "";
        string Mobile = "";
        string Country = "";
        string State = "";
        string City = "";
        string Location = "";
        string Productcategory = "";
        string Fromdate = "";
        string Todate = "";
        string OrderStatus = "";
        string Sbentrycode = "";
        string Active = "";
        string Promoted = "";
        if (Chkactive.Checked == true)
        {
            Active = "1";
        }
        else
        {
            Active = "0";
        }
        if (chkpromoted.Checked == true)
        {
            Promoted = "1";
        }
        else
        {
            Promoted = "0";
        }

        Customer_Type = ddlcustomertypesearch.SelectedValue;
        Institutiontype = ddlinstitutionsearch.SelectedValue;
        Boardid = ddlboardsearch.SelectedValue;
        Standard = ddlstandardsearch.SelectedValue;
        Mobile = txthandphonesearch.Text;
        Country = ddlcountrysearch.SelectedValue;
        State = ddlstatesearch.SelectedValue;
        City = ddlcitysearch.SelectedValue;
        Location = ddllocationsearch.SelectedValue;
        Productcategory = ddlproductcategory.SelectedValue;
        Fromdate = txteventdatefrom.Text;
        Todate = txteventdateto.Text;
        OrderStatus = ddlorderstatus.SelectedValue;
        Sbentrycode = txtsbentrycode.Text;
        //If chkfollowup.Checked = True Then
        //    followup_overdue = 1
        //Else
        //    followup_overdue = 0
        //End If



        DataSet ds = AccountController.Get_Account_Search_Results(StudentName, Applicationno, Company, Division, Zone, Center, AcademicYear, Stream, UserID, Customer_Type,
        Institutiontype, Boardid, Standard, Mobile, Country, State, City, Location, Productcategory, Fromdate,
        Todate, OrderStatus, Sbentrycode, Active, Promoted);


        PagedDataSource Pds1 = new PagedDataSource();
        Pds1.DataSource = ds.Tables[0].DefaultView;
        Pds1.AllowPaging = true;
        Pds1.PageSize = 10;
        Pds1.CurrentPageIndex = Currentpage;
        lbl1.Text = "Showing " + (Currentpage + 1).ToString() + " of " + Pds1.PageCount.ToString();
        btnprevious.Enabled = !Pds1.IsFirstPage;
        Btnnext.Enabled = !Pds1.IsLastPage;

        if (ds.Tables[0].Rows.Count > 0)
        {
            Divsearchcriteria.Visible = false;
            lblpagetitle1.Text = "Manage Account";
            lblpagetitle2.Text = "Search";
            limidbreadcrumb.Visible = true;
            lblmidbreadcrumb.Text = "Manage Account";
            lilastbreadcrumb.Visible = true;
            lbllastbreadcrumb.Text = " Account Search Results";
            lilastbreadcrumb.Visible = true;

            //lbltabname.Text = "Search Results"
            divSuccessmessage.Visible = false;
            divErrormessage.Visible = false;
            divsearchresults.Visible = true;
            divmessage.Visible = false;
            System.Threading.Thread.Sleep(1000);
            dlsearch.DataSource = Pds1;
            dlsearch.DataBind();
            script1.RegisterAsyncPostBackControl(dlsearch);

        }
        else
        {
            //divsearchresults.Visible = False
            //divmessage.Visible = True
            //lblmessage.Text = "No Records Found!"
        }
    }


    protected void dlsearch_ItemCommand(object source, System.Web.UI.WebControls.DataListCommandEventArgs e)
    {
        if (e.CommandName == "Ledger")
        {
            System.Threading.Thread.Sleep(1000);
            upnlsearch.Visible = false;
            Upnlviewledger.Visible = true;
            lblpagetitle1.Text = "View Ledger";
            lblpagetitle2.Text = "";
            limidbreadcrumb.Visible = true;
            lblmidbreadcrumb.Text = "Manage Account";
            lilastbreadcrumb.Visible = true;
            lbllastbreadcrumb.Text = "View Ledger";
            divSuccessmessage.Visible = false;
            divErrormessage.Visible = false;
            //lbltabname1.Text = "Student Ledger"
            string Cur_Sb_Code = "";
            Cur_Sb_Code = e.CommandArgument.ToString();
            Session["CUR_SB_Code"] = e.CommandArgument.ToString();
            diverrorPayment.Visible = false;
            divSuccessPayment.Visible = false;
            btnviewenrollment.Visible = true;
            Bindlist(Cur_Sb_Code);
            BindStudentSubjectGroup(Cur_Sb_Code);
            Bindpayment(Cur_Sb_Code);
            //BindPaymode()
            BindStudentLedger();
            BindChequeOutstanding();
            //BindPayhead()
            Bindrequestdetails();
            diveditpayemnt.Visible = false;
            string oppid = txtopportunityid.Text;
            HtmlAnchor viewenrollment = btnviewenrollment;
            viewenrollment.HRef = "Enrollment_display.aspx?&Oppur_id=" + oppid;
            dlpaymentreceipt.Visible = true;
            divpayment.Visible = false;
            txtpaydate.Text = DateTime.Now.ToString("dd-MM-yyyy");
            tblbankdetails.Visible = false;
            tblcash.Visible = false;
            tblcheque.Visible = false;
            tblDD.Visible = false;
            //tr01.Visible = False
            //tr02.Visible = False
            //tr03.Visible = False
            //tr04.Visible = False
            //'tr05.Visible = False
            //tr01_1.Visible = False
            //tr01_2.Visible = False
            //'tr01_3.Visible = False
            //tr02_1.Visible = False
            //tr01_5.Visible = False
        }
        else if (e.CommandName == "Edit")
        {
            //diveditpayemnt.Visible = True
            //System.Threading.Thread.Sleep(100)
            //Dim Sbentrycode As String = e.CommandArgument.ToString
            //Dim Oppur_id As String = AccountController.GetOppidbysbentrycode(Sbentrycode)
            //Response.Redirect("Account_Edit.aspx?&Oppur_ID=" & Oppur_id)

        }
        else if (e.CommandName == "Promote")
        {
        }
    }

    protected void dlsearch_ItemDataBound(object sender, System.Web.UI.WebControls.DataListItemEventArgs e)
    {
        if (e.Item.ItemType == ListItemType.Item || e.Item.ItemType == ListItemType.AlternatingItem)
        {
            if (lblusercompany.Text == "MPUC")
            {
                ((LinkButton)e.Item.FindControl("lnkledger")).Enabled = true;
                ((LinkButton)e.Item.FindControl("lnkledger")).Visible = true;
                //DirectCast(e.Item.FindControl("lnkpromote"), LinkButton).Visible = True
                ((LinkButton)e.Item.FindControl("lnkedit")).Visible = true;


                ScriptManager scriptManager__1 = ScriptManager.GetCurrent(this.Page);
                scriptManager__1.RegisterPostBackControl((LinkButton)e.Item.FindControl("lnkledger"));
                //scriptManager__1.RegisterPostBackControl(DirectCast(e.Item.FindControl("lnkpromote"), LinkButton))
                string Status = ((Label)e.Item.FindControl("Label30")).Text;
                if (Status == "03")
                {
                    ((LinkButton)e.Item.FindControl("lnkledger")).Attributes.Add("class", "btn default btn-xs red");
                    ((Label)e.Item.FindControl("Label3")).Attributes.Add("class", "btn default btn-xs red");
                    ((Label)e.Item.FindControl("Label3")).Text = "Pending";
                    //DirectCast(e.Item.FindControl("lnkpromote"), LinkButton).Visible = False
                    ((LinkButton)e.Item.FindControl("lnkedit")).Visible = true;
                }
                else if (Status == "01")
                {
                    ((LinkButton)e.Item.FindControl("lnkledger")).Attributes.Add("class", "btn default btn-xs green");
                    ((Label)e.Item.FindControl("Label3")).Attributes.Add("class", "btn default btn-xs green");
                    ((Label)e.Item.FindControl("Label3")).Text = "Confirmed";
                    string StudeStatus = ((Label)e.Item.FindControl("lblpromotedflag")).Text;
                    if (StudeStatus == "1")
                    {
                        // DirectCast(e.Item.FindControl("lnkpromote"), LinkButton).Visible = False
                        ((LinkButton)e.Item.FindControl("lnkedit")).Visible = false;
                        ((Label)e.Item.FindControl("Label6")).Attributes.Add("class", "btn default btn-xs purple");
                        ((Label)e.Item.FindControl("Label6")).Visible = false;
                        ((Label)e.Item.FindControl("Label6")).Text = "Promoted";
                        lblpromoteflag.Text = "1";
                    }
                    else
                    {
                        //DirectCast(e.Item.FindControl("lnkpromote"), LinkButton).Visible = True
                        ((LinkButton)e.Item.FindControl("lnkedit")).Visible = true;
                        //DirectCast(e.Item.FindControl("Label6"), Label).Attributes.Add("class", "btn default btn-xs red")
                        ((Label)e.Item.FindControl("Label6")).Visible = false;
                        //DirectCast(e.Item.FindControl("Label6"), Label).Text = "Not Promoted"
                        lblpromoteflag.Text = "0";
                    }

                }
            }
            else
            {
                ((LinkButton)e.Item.FindControl("lnkledger")).Visible = true;
                ((LinkButton)e.Item.FindControl("lnkledger")).Enabled = false;
                ((Label)e.Item.FindControl("Label3")).Visible = false;
                //DirectCast(e.Item.FindControl("lnkpromote"), LinkButton).Visible = False
                ((LinkButton)e.Item.FindControl("lnkedit")).Visible = false;

            }

        }
    }

    private void Bindlist(string Cursbcode)
    {

        try
        {

            string Hiphen = "-";
            SqlDataReader dr = AccountController.GetAccountdetailbycursbcode(1, Cursbcode);
            if ((((dr) != null)))
            {
                if (dr.Read())
                {
                    string Gender = dr["GENDER"].ToString();
                    if (Gender == "M")
                    {
                        txtgender.Text = "Male";
                    }
                    else
                    {
                        txtgender.Text = "Female";
                    }
                   txtLstudentname.Text = dr["NAME"].ToString();
                    lblstudentname1.Text = dr["NAME"].ToString();
                    lblstudentname.Text = Hiphen + " " + dr["NAME"].ToString();
                    imgstudentphoto.ImageUrl = dr["stud_image"].ToString();
                    txtLappno.Text = dr["Student_App_No"].ToString();
                    txtopportunityid.Text = dr["oppor_id"].ToString();
                    txtaccountid.Text = dr["account_id"].ToString();
                    txtcursbcode.Text = dr["sbentrycode"].ToString();
                    BindLedgerCompany();
                    ddllcompany.SelectedValue = dr["companycode"].ToString();
                    BindLedgerDivision();
                    ddlldivision.SelectedValue = dr["divisioncode"].ToString();
                    BindLedgerCenter();
                    ddllcenter.SelectedValue = dr["center_code"].ToString();
                    BindLedgerAcademicYear();
                    ddllacadyear.SelectedValue = dr["acad_year"].ToString();
                    BindLedgerStream();
                    ddllstream.SelectedValue = dr["stream_code"].ToString();
                    txtpayplan.Text = dr["payplan"].ToString();
                    string Studentstatus = "";
                    Studentstatus = dr["Account_Status_id"].ToString();


                    //01-Pending
                    if (Studentstatus == "01")
                    {
                        listudentstatus.Visible = true;
                        liregno.Visible = false;
                        lblstdstaus.Text = "Student Status : Pending";
                        btnstatus.Attributes.Remove("Class");
                        btnstatus.Attributes.Add("Class", "btn red");
                        btnproceedprint.Visible = false;
                        aaddsubject.Visible = true;
                        aremovesubject.Visible = true;
                        achangesubject.Visible = false;
                        aconcessionreq.Visible = true;
                        adiscountreq.Visible = true;
                        apromotestudent.Visible = false;
                        btnEvent.Visible = false;
                        txtDiscrequestdate.Text = DateTime.Now.ToString("dd-MM-yyyy");
                        txtconcessionreqdate.Text = DateTime.Now.ToString("dd-MM-yyyy");
                        //BindDiscounttype()
                        //BindConcessiontype()

                    }
                    else if (Studentstatus == "03")
                    {
                        if (lblpromoteflag.Text == "1")
                        {
                            listudentstatus.Visible = true;
                            liregno.Visible = false;
                            lblstdstaus.Text = "Student Status : Promoted";
                            btnstatus.Attributes.Remove("Class");
                            btnstatus.Attributes.Add("Class", "btn purple");
                            apromotestudent.Visible = false;
                            aaddsubject.Visible = false;
                            aremovesubject.Visible = false;
                            achangesubject.Visible = false;
                            aconcessionreq.Visible = false;
                            adiscountreq.Visible = false;
                            btnaddpayment.Visible = false;
                            acanceladdmission.Visible = false;
                            btnEvent.Visible = false;
                        }
                        else
                        {
                            listudentstatus.Visible = true;
                            liregno.Visible = false;
                            lblstdstaus.Text = "Student Status : Confirmed";
                            btnstatus.Attributes.Remove("Class");
                            btnstatus.Attributes.Add("Class", "btn green");
                            apromotestudent.Visible = true;
                            aaddsubject.Visible = true;
                            aremovesubject.Visible = false;
                            achangesubject.Visible = false;
                            aconcessionreq.Visible = false;
                            adiscountreq.Visible = false;
                            btnaddpayment.Visible = true;
                            acanceladdmission.Visible = true;
                            btnEvent.Visible = false;
                        }

                    }
                    else if (Studentstatus == "02")
                    {
                        listudentstatus.Visible = true;
                        liregno.Visible = false;
                        lblstdstaus.Text = "Student Status : Cancelled";
                        btnstatus.Attributes.Remove("Class");
                        btnstatus.Attributes.Add("Class", "btn purple");
                        btnproceedprint.Visible = true;
                        aaddsubject.Visible = false;
                        aremovesubject.Visible = false;
                        achangesubject.Visible = false;
                        aconcessionreq.Visible = false;
                        adiscountreq.Visible = false;
                        apromotestudent.Visible = false;
                        btnaddpayment.Visible = false;
                        btnEvent.Visible = false;
                    }
                }
            }
            txtpaydate.Text = Today;
            divErrormessage.Visible = false;
        }
        catch (Exception ex)
        {
            divErrormessage.Visible = true;
            lblerrormessage.Visible = true;
            lblerrormessage.Text = ex.Message;
        }
    }

    private void BindLedgerCompany()
    {
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        DataSet ds = ProductController.GetUser_Company_Division_Zone_Center(1, UserID, "", "", "");
        BindDDL(ddllcompany, ds, "Company_Name", "Company_Code");
        ddllcompany.Items.Insert(0, "Select");
        ddllcompany.SelectedIndex = 0;
    }
    private void BindLedgerDivision()
    {
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        DataSet ds = ProductController.GetUser_Company_Division_Zone_Center(2, UserID, "", "", ddllcompany.SelectedValue);
        BindDDL(ddlldivision, ds, "Division_Name", "Division_Code");
        ddlldivision.Items.Insert(0, "Select");
        ddlldivision.SelectedIndex = 0;
    }
    private void BindLedgerCenter()
    {
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        DataSet ds = ProductController.GetUser_Company_Division_Zone_Center(5, UserID, ddlldivision.SelectedValue, "", ddllcompany.SelectedValue);
        BindDDL(ddllcenter, ds, "Center_name", "Center_Code");
        ddllcenter.Items.Insert(0, "Select");
        ddllcenter.SelectedIndex = 0;
    }

    private void BindLedgerAcademicYear()
    {
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        DataSet ds = ProductController.GetAcademicYearbyCenter(ddllcenter.SelectedValue);
        BindDDL(ddllacadyear, ds, "AY_String", "AY_String");
        ddllacadyear.Items.Insert(0, "Select");
        ddllacadyear.SelectedIndex = 0;
    }
    private void BindLedgerStream()
    {
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        DataSet ds = ProductController.GetStreamby_Center_AcademicYear_All(ddllcenter.SelectedValue, ddllacadyear.SelectedValue);
        BindDDL(ddllstream, ds, "Stream_Sdesc", "Stream_Code");
        ddllstream.Items.Insert(0, "Select");
        ddllstream.SelectedIndex = 0;
    }

    private void BindStudentSubjectGroup(string CurSbCode)
    {
        DataSet ds = AccountController.GetStudentSubjectgroupbyCursbcode(2, CurSbCode);
        lbsubjectgroup.DataSource = ds;
        lbsubjectgroup.DataTextField = "SGR_DESC";
        lbsubjectgroup.DataValueField = "sgr_material";
        lbsubjectgroup.DataBind();
    }

    private void BindPayhead()
    {
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        string Sbentrycode = txtcursbcode.Text;
        DataSet ds = AccountController.GetPayheadbySBentrycode(Sbentrycode);
        BindDDL(ddlpayhead, ds, "Voucher_Description", "Pricing_Procedure_Code");
        ddlpayhead.Items.Insert(0, "Select");
        ddlpayhead.SelectedIndex = 0;
    }
    //Bind Payment

    private void Bindpayment(string CurSbCode)
    {
        string Sbentrycode = "";
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        Sbentrycode = txtcursbcode.Text;
        DataSet ds = AccountController.GetPaymentDetailsbySBEntrycode(Sbentrycode);
        if (ds.Tables[0].Rows.Count > 0)
        {
            //System.Threading.Thread.Sleep(1000)
            dlpaymentreceipt.DataSource = ds;
            dlpaymentreceipt.DataBind();
            diverrorPayment.Visible = false;
            lblerrorPayment.Visible = false;
        }
        else
        {
            diverrorPayment.Visible = true;
            lblerrorPayment.Visible = true;
            lblerrorPayment.Text = "No Payment Records Found!";
        }
    }

    protected void dlpaymentreceipt_ItemCommand(object source, System.Web.UI.WebControls.DataListCommandEventArgs e)
    {
        if (e.CommandName == "Edit")
        {
            dlpaymentreceipt.Visible = false;
            string Receiptid = e.CommandArgument.ToString();
            lblreceiptidedit.Text = Receiptid;
            Bindpaymodeedit();
            BindPayeeedit();
            BindChequeallocationEdit();
            Bindpaymentdata();
            diveditpayemnt.Visible = true;
        }
        else if (e.CommandName == "Remove")
        {
            lblnote.Text = "You are about to Remove a Receipt. Please confirm.";
            ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "k2", "<script type=\"text/javascript\">$(function () { $('#Removereceipt').modal('show') });</script>", false);
            string Receiptid = e.CommandArgument.ToString();
            lblchequeidno.Text = Receiptid;
        }
    }
    ///'''''''''''''''''Payment Management'''''''''''''''''''''''''''''''''''
    protected void dlpaymentreceipt_ItemDataBound(object sender, System.Web.UI.WebControls.DataListItemEventArgs e)
    {
        if (e.Item.ItemType == ListItemType.Item || e.Item.ItemType == ListItemType.AlternatingItem)
        {
            ScriptManager scriptManager__1 = ScriptManager.GetCurrent(this.Page);
            scriptManager__1.RegisterPostBackControl((LinkButton)e.Item.FindControl("lnkedit"));

            string Status = ((Label)e.Item.FindControl("lblchequestatus")).Text;
            if (Status == "Pending")
            {
                //DirectCast(e.Item.FindControl("lblchequestatus"), Label).BackColor = System.Drawing.Color.IndianRed
                ((Label)e.Item.FindControl("lblchequestatus")).ForeColor = System.Drawing.Color.DarkViolet;
                ((LinkButton)e.Item.FindControl("lnkedit")).Visible = true;
                ((LinkButton)e.Item.FindControl("lnkblock")).Visible = true;
            }
            else if (Status == "Deposited")
            {
                //DirectCast(e.Item.FindControl("lblchequestatus"), Label).BackColor = System.Drawing.Color.RosyBrown
                ((Label)e.Item.FindControl("lblchequestatus")).ForeColor = System.Drawing.Color.Blue;
                ((LinkButton)e.Item.FindControl("lnkedit")).Visible = false;
                ((LinkButton)e.Item.FindControl("lnkblock")).Visible = false;
            }
            else if (Status == "Cleared")
            {
                //DirectCast(e.Item.FindControl("lblchequestatus"), Label).BackColor = System.Drawing.Color.Green
                ((Label)e.Item.FindControl("lblchequestatus")).ForeColor = System.Drawing.Color.DarkCyan;
                ((LinkButton)e.Item.FindControl("lnkedit")).Visible = false;
                ((LinkButton)e.Item.FindControl("lnkblock")).Visible = false;
            }
            else if (Status == "Bounced")
            {
                //DirectCast(e.Item.FindControl("lblchequestatus"), Label).BackColor = System.Drawing.Color.Red
                ((Label)e.Item.FindControl("lblchequestatus")).ForeColor = System.Drawing.Color.Red;
                ((LinkButton)e.Item.FindControl("lnkedit")).Visible = false;
                ((LinkButton)e.Item.FindControl("lnkblock")).Visible = false;
            }
        }
    }
    protected void btncloseremoverpt_ServerClick(object sender, System.EventArgs e)
    {
        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "k2", "<script type=\"text/javascript\">$(function () { $('#Removereceipt').modal('hide') });</script>", false);
    }
    protected void btnremovereceipt_ServerClick(object sender, System.EventArgs e)
    {

        try
        {

            string Paydate = Today;
            decimal Amtinstr = 0;
            string Sbentrycode = "";
            string Paymode = "";
            string PayInsnum = "";
            string PayInsdate = Today;
            string PayInsBankName = "";
            string InsStatus = "";
            string Inslocation = "";
            string InsDepositdate = "";
            string IDepositdate = Today;
            string InsBRSDate = Today;
            string IBRSdate = Today;
            HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
            string UserID = cookie.Values["UserID"];
            string UserName = cookie.Values["UserName"];
            string MicrCode = "";
            string PayHeadCode = "";
            string PayHeadDesc = "";
            string Payidate = Today;
            string paydate1 = Today;
            string Payeeid = "";
            string Chequeidno = lblchequeidno.Text;
            Sbentrycode = txtcursbcode.Text;
            string Receiptid = AccountController.InsertPayment(4, Paydate, Amtinstr, Sbentrycode, Paymode, PayInsnum, Payidate, PayInsBankName, InsStatus, Inslocation,
            IDepositdate, IBRSdate, UserID, MicrCode, PayHeadCode, PayHeadDesc, Payeeid, Chequeidno);

            string Cur_sb_code = txtcursbcode.Text;
            Bindlist(Cur_sb_code);
            BindStudentSubjectGroup(Cur_sb_code);
            Bindpayment(Cur_sb_code);
            //BindPaymode()
            BindStudentLedger();
            BindChequeOutstanding();
            //BindPayhead()
            Bindrequestdetails();
            divErrormessage.Visible = false;
        }
        catch (Exception ex)
        {
            divErrormessage.Visible = true;
            lblerrormessage.Visible = true;
            lblerrormessage.Text = ex.Message;

        }
    }
    protected void btnaddpayment_ServerClick(object sender, System.EventArgs e)
    {

        try
        {

            dlpaymentreceipt.Visible = false;
            divpayment.Visible = true;
            txtpaydate.Text = DateTime.Now.ToString("dd-MM-yyyy");
            txtchequeamt.Text = "";
            txtchqno.Text = "";
            txtchqdate.Text = "";
            txtbankname.Text = "";
            txtddno.Text = "";
            txtdddate.Text = "";
            txtbankname.Text = "";
            txtbranchname.Text = "";
            txtmicrcode.Text = "";
            tblcheque.Visible = false;
            tblDD.Visible = false;
            tblbankdetails.Visible = false;
            tblcash.Visible = false;
            diverrorPayment.Visible = false;
            lblerrorPayment.Visible = false;
            tr22.Visible = false;
            tr23.Visible = false;
            tr24.Visible = false;
            BindPaymode();
            BindPayee();
            BindChequeallocation();
            dlallocation.Visible = false;
            divErrormessage.Visible = false;
        }
        catch (Exception ex)
        {
            divErrormessage.Visible = true;
            lblerrormessage.Visible = true;
            lblerrormessage.Text = ex.Message;
        }
    }
    protected void ddlpayhead_SelectedIndexChanged(object sender, System.EventArgs e)
    {
        //Dim Sbentrycode As String = ""
        //Dim PPgroup As String = ""

        //Sbentrycode = txtcursbcode.Text
        //PPgroup = ddlpayhead.SelectedValue
        //Dim dr As SqlDataReader = AccountController.Get_Feeheadvalue(Sbentrycode, PPgroup)
        //If (Not (dr) Is Nothing) Then
        //    If dr.Read Then
        //        txtpayheadfee.Text = dr("Feehead").ToString
        //        txtreceipt.Text = (dr("Receipt_Collected").ToString)
        //        txttobecollected.Text = dr("Amount_to_be_collected").ToString
        //        BindPaymode()
        //    End If
        //End If
    }
    private void BindChequeallocation()
    {
        string Sbentrycode = "";
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        Sbentrycode = txtcursbcode.Text;
        DataSet ds = AccountController.GetPPgroupbysbentrycode(Sbentrycode);
        if (ds.Tables[0].Rows.Count > 0)
        {
            //System.Threading.Thread.Sleep(1000)
            dlallocation.DataSource = ds;
            dlallocation.DataBind();
            //diverrorPayment.Visible = False
            //lblerrorPayment.Visible = False
        }
        else
        {
            //diverrorPayment.Visible = True
            //lblerrorPayment.Visible = True
            //lblerrorPayment.Text = "No Payment Records Found!"
        }
    }
    private void BindPaymode()
    {
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        DataSet ds = AccountController.GetallPaymode();
        BindDDL(ddlpaymode, ds, "Description", "id");
        ddlpaymode.Items.Insert(0, "Select");
        ddlpaymode.SelectedIndex = 0;
    }
    private void BindPayee()
    {
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        string Company = "";
        string Division = "";
        Company = ddllcompany.SelectedValue;
        Division = ddlldivision.SelectedValue;
        DataSet ds = AccountController.Getallpayeebycompanydivision(Company, Division);
        BindDDL(ddlpayee, ds, "Payee_Name", "payee_id");
        ddlpayee.Items.Insert(0, "Select");
        ddlpayee.SelectedIndex = 0;
        BindDDL(ddlpayeedd, ds, "Payee_Name", "payee_id");
        ddlpayeedd.Items.Insert(0, "Select");
        ddlpayeedd.SelectedIndex = 0;
        BindDDL(ddlpayeecash, ds, "Payee_Name", "payee_id");
        ddlpayeecash.Items.Insert(0, "Select");
        ddlpayeecash.SelectedIndex = 0;
    }
    protected void ddlpayee_SelectedIndexChanged(object sender, System.EventArgs e)
    {
        dlallocation.Visible = true;
        string payeeid = ddlpayee.SelectedValue;
        if (payeeid == "Select")
        {
            dlallocation.Visible = false;
        }
        else
        {
            BindChequeallocationbyPayee(payeeid);
        }

    }
    protected void ddlpayeedd_SelectedIndexChanged(object sender, System.EventArgs e)
    {
        dlallocation.Visible = true;
        string payeeid = ddlpayeedd.SelectedValue;
        if (payeeid == "Select")
        {
            dlallocation.Visible = false;
        }
        else
        {
            BindChequeallocationbyPayee(payeeid);
        }
    }

    protected void ddlpayeecash_SelectedIndexChanged(object sender, System.EventArgs e)
    {
        dlallocation.Visible = true;
        string payeeid = ddlpayeecash.SelectedValue;
        if (payeeid == "Select")
        {
            dlallocation.Visible = false;
        }
        else
        {
            BindChequeallocationbyPayee(payeeid);
        }
    }
    private void BindChequeallocationbyPayee(string Payeeid)
    {
        string Sbentrycode = "";
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        Sbentrycode = txtcursbcode.Text;
        DataSet ds = AccountController.GetPPGroupbySBEntrycodeAndPayeeid(Sbentrycode, Payeeid);
        if (ds.Tables[0].Rows.Count > 0)
        {
            dlallocation.DataSource = ds;
            dlallocation.DataBind();
            //diverrorPayment.Visible = False
            //lblerrorPayment.Visible = False
        }
        else
        {
            dlallocation.Visible = false;
            //diverrorPayment.Visible = True
            //lblerrorPayment.Visible = True
            //lblerrorPayment.Text = "No Allocation Assigned! Contact Administrator"
        }
    }
    protected void txtmicrcode_TextChanged(object sender, System.EventArgs e)
    {
        string MicrCode = "";
        MicrCode = txtmicrcode.Text;
        SqlDataReader dr = AccountController.GetBanknameandAddress(MicrCode);
        if ((((dr) != null)))
        {
            if (dr.Read())
            {
                txtbankname.Text = dr["bankname"].ToString();
                txtbranchname.Text = dr["bankbranch"].ToString();
            }
        }
    }
    protected void ddlpaymode_SelectedIndexChanged(object sender, System.EventArgs e)
    {
        dlpaymentreceipt.Visible = false;
        divpayment.Visible = true;
        if (ddlpaymode.SelectedValue == "01")
        {
            tblcheque.Visible = true;
            tblDD.Visible = false;
            tblbankdetails.Visible = true;
            tblcash.Visible = false;
            tr22.Visible = true;
            tr23.Visible = false;
            tr24.Visible = false;

        }
        else if (ddlpaymode.SelectedValue == "02")
        {
            tblcheque.Visible = false;
            tblDD.Visible = true;
            tblbankdetails.Visible = true;
            tblcash.Visible = false;
            tr22.Visible = false;
            tr23.Visible = true;
            tr24.Visible = false;
        }
        else if (ddlpaymode.SelectedValue == "03")
        {
            tblcheque.Visible = false;
            tblDD.Visible = false;
            tblbankdetails.Visible = false;
            tblcash.Visible = true;
            tr22.Visible = false;
            tr23.Visible = false;
            tr24.Visible = true;
        }


        //ScriptManager.RegisterClientScriptBlock(Me, Me.GetType(), "k2", "<script type=""text/javascript"">$(function () { $('#basic').modal('show') });</script>", False)
    }
    private void GetSumvalue()
    {

        try
        {

            Object obj = default(Object);
            Object obj1 = default(Object);
            CheckBox chk = null;
            TextBox lblsid = default(TextBox);
            int Sum = 0;
            int Count = 0;
            if (ddlpaymode.SelectedValue == "01")
            {
                foreach (DataListItem li in dlallocation.Items)
                {
                    obj = li.FindControl("chk1");
                    if (obj != null)
                    {
                        chk = (CheckBox)obj;
                    }

                    obj = li.FindControl("txtcurrentallocation");
                    if (obj != null)
                    {
                        lblsid = (TextBox)obj;
                    }
                    if (chk.Checked == true)
                    {
                        //li.FindControl("txtcurrentallocation")
                        if (string.IsNullOrEmpty(lblsid.Text))
                        {
                        }
                        else
                        {
                            Sum = Sum +Convert.ToInt32(lblsid.Text);
                            txtslipamt.Text = Sum.ToString();
                        }
                        lblsid.Enabled = true;
                    }
                    else
                    {
                        lblsid.Enabled = false;
                        lblsid.Text = "";
                        //txtslipamt.Text = "0"
                    }
                }
            }
            divErrormessage.Visible = false;
        }
        catch (Exception ex)
        {
            divErrormessage.Visible = true;
            lblerrormessage.Visible = true;
            lblerrormessage.Text = ex.Message;
        }
    }
    private void GetSumvaluedd()
    {
        try
        {
            Object obj = default(Object);
            Object obj1 = default(Object);
            CheckBox chk = null;
            TextBox lblsid = default(TextBox);
            int Sum = 0;
            int Count = 0;
            if (ddlpaymode.SelectedValue == "02")
            {
                foreach (DataListItem li in dlallocation.Items)
                {
                    obj = li.FindControl("chk1");
                    if (obj != null)
                    {
                        chk = (CheckBox)obj;
                    }

                    obj = li.FindControl("txtcurrentallocation");
                    if (obj != null)
                    {
                        lblsid = (TextBox)obj;
                    }
                    if (chk.Checked == true)
                    {
                        //li.FindControl("txtcurrentallocation")
                        if (string.IsNullOrEmpty(lblsid.Text))
                        {
                        }
                        else
                        {
                            Sum = Sum +Convert.ToInt32(lblsid.Text);
                            txtddalloca.Text = Sum.ToString();
                        }
                        lblsid.Enabled = true;
                    }
                    else
                    {
                        lblsid.Enabled = false;
                        lblsid.Text = "";
                        // txtddalloca.Text = "0"
                    }
                }
            }
            divErrormessage.Visible = false;
        }
        catch (Exception ex)
        {
            divErrormessage.Visible = true;
            lblerrormessage.Visible = true;
            lblerrormessage.Text = ex.Message;
        }
    }
    private void GetSumvaluecash()
    {

        try
        {

            Object obj = default(Object);
            Object obj1 = default(Object);
            CheckBox chk = null;
            TextBox lblsid = default(TextBox);
            int Sum = 0;
            int Count = 0;
            if (ddlpaymode.SelectedValue == "03")
            {
                foreach (DataListItem li in dlallocation.Items)
                {
                    obj = li.FindControl("chk1");
                    if (obj != null)
                    {
                        chk = (CheckBox)obj;
                    }

                    obj = li.FindControl("txtcurrentallocation");
                    if (obj != null)
                    {
                        lblsid = (TextBox)obj;
                    }
                    if (chk.Checked == true)
                    {
                        //li.FindControl("txtcurrentallocation")
                        if (string.IsNullOrEmpty(lblsid.Text))
                        {
                        }
                        else
                        {
                            Sum = Sum +Convert.ToInt32(lblsid.Text);
                            txtcashalloca.Text = Sum.ToString();
                        }
                        lblsid.Enabled = true;
                    }
                    else
                    {
                        lblsid.Enabled = false;
                        lblsid.Text = "";
                        //txtcashalloca.Text = ""
                    }
                }
            }
            divErrormessage.Visible = false;
        }
        catch (Exception ex)
        {
            divErrormessage.Visible = true;
            lblerrormessage.Visible = true;
            lblerrormessage.Text = ex.Message;
        }
    }
    protected void btnsavepayment_ServerClick(object sender, System.EventArgs e)
    {

        try
        {
            object obj11 = null;
            CheckBox Chk11 = default(CheckBox);
            Label lblselecteditem = default(Label);
            List<string> list = new List<string>();
            List<string> List1 = new List<string>();
            string Sgrcode = "";
            CheckBox cb1 = default(CheckBox);
            foreach (DataListItem li in dlallocation.Items)
            {
                obj11 = li.FindControl("lblproductheader");
                if (obj11 != null)
                {
                    lblselecteditem = (Label)obj11;
                }

                cb1 = li.FindControl("chk1");
                if (cb1 != null)
                {
                    Chk11 = (CheckBox)cb1;
                }

                if (Chk11.Checked == true)
                {
                    list.Add(lblselecteditem.Text);
                    Sgrcode = string.Join(",", list.ToArray());

                }
                else
                {
                }
            }
            if (Sgrcode.Length > 0)
            {
                string Paydate = "";
                decimal Amtinstr = 0;
                string Sbentrycode = "";
                string Paymode = "";
                string PayInsnum = "";
                string PayInsdate = "";
                string PayInsBankName = "";
                string InsStatus = "";
                string Inslocation = "";
                string InsDepositdate = "";
                string IDepositdate = "";
                string InsBRSDate = "";
                string IBRSdate = "";
                HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
                string UserID = cookie.Values["UserID"];
                string UserName = cookie.Values["UserName"];
                string MicrCode = "";
                string PayHeadCode = "";
                string PayHeadDesc = "";
                string Payidate = "";
                string paydate1 = "";
                paydate1 = Today;
                Paydate = paydate1;
                InsDepositdate = Today;
                InsBRSDate = Today;
                Sbentrycode = txtcursbcode.Text;
                string Payeeid = "";
                Paymode = ddlpaymode.SelectedValue;
                if (ddlpaymode.SelectedValue == "01")
                {
                    Amtinstr =Convert.ToDecimal(txtchequeamt.Text);
                    PayInsnum = txtchqno.Text;
                    PayInsdate = txtchqdate.Text;
                    Payidate = txtchqdate.Text;
                    PayInsBankName = txtbankname.Text;
                    InsStatus = "01";
                    Inslocation = "";
                    IDepositdate = InsDepositdate;
                    IBRSdate = InsBRSDate;
                    MicrCode = txtmicrcode.Text;
                    Payeeid = ddlpayee.SelectedValue;
                }
                else if (ddlpaymode.SelectedValue == "02")
                {
                    Amtinstr =Convert.ToDecimal(txtddamt.Text);
                    PayInsnum = txtddno.Text;
                    PayInsdate = txtdddate.Text;
                    Payidate = txtdddate.Text;
                    PayInsBankName = txtbankname.Text;
                    InsStatus = "01";
                    Inslocation = "";
                    IDepositdate = InsDepositdate;
                    IBRSdate = InsBRSDate;
                    MicrCode = txtmicrcode.Text;
                    Payeeid = ddlpayeedd.SelectedValue;
                }
                else if (ddlpaymode.SelectedValue == "03")
                {
                    Amtinstr =Convert.ToDecimal(txtcashamt.Text);
                    PayInsnum = "";
                    PayInsdate = "";
                    Payidate = "";
                    PayInsBankName = "";
                    InsStatus = "03";
                    Inslocation = "";
                    IDepositdate = "";
                    IBRSdate = "";
                    MicrCode = txtmicrcode.Text;
                    Payeeid = ddlpayeecash.SelectedValue;
                }
                string Receiptcode = "";
                string Receiptid = AccountController.InsertPayment(2, Paydate, Amtinstr, Sbentrycode, Paymode, PayInsnum, Payidate, PayInsBankName, InsStatus, Inslocation,
                IDepositdate, IBRSdate, UserID, MicrCode, PayHeadCode, PayHeadDesc, Payeeid, Receiptcode);
                //ScriptManager.RegisterClientScriptBlock(Me, Me.GetType(), "k2", "<script type=""text/javascript"">$(function () { $('#basic').modal('hide') });</script>", False)
                lblreceiptid.Text = Receiptid;
                Insertallocation();
                txtpaydate.Text = "";
                txtchequeamt.Text = "";
                ddlpaymode.SelectedIndex = 0;
                txtchqno.Text = "";
                txtchqdate.Text = "";
                txtbankname.Text = "";
                txtddno.Text = "";
                txtddamt.Text = "";
                txtdddate.Text = "";
                txtbankname.Text = "";
                txtbranchname.Text = "";
                txtmicrcode.Text = "";
                txtcashamt.Text = "";
                Bindpayment(Sbentrycode);
                BindStudentLedger();
                BindChequeOutstanding();
                Bindlist(Sbentrycode);
                //ddlpayhead.SelectedIndex = 0
                dlpaymentreceipt.Visible = true;
                divpayment.Visible = false;
                dynamic Cur_Sb_Code = "";
                txtslipamt.Text = "";
                txtddalloca.Text = "";
                txtcashalloca.Text = "";
                Bindpayment(Cur_Sb_Code);
                divErrormessage.Visible = false;
            }
            else
            {
                divErrormessage.Visible = true;
                lblerrormessage.Visible = true;
                lblerrormessage.Text = "Atleast One Product Header should be Selected.";
            }
        }
        catch (Exception ex)
        {
            divErrormessage.Visible = true;
            lblerrormessage.Visible = true;
            lblerrormessage.Text = ex.Message;
        }
    }
    private void Insertallocation()
    {

        try
        {

            object obj = null;
            CheckBox Chk = default(CheckBox);
            CheckBox cb = default(CheckBox);
            TextBox txtcurrentallocation = default(TextBox);
            Label lblproductheadercode = default(Label);
            TextBox Txtamt = default(TextBox);
            List<string> list = new List<string>();
            List<string> List1 = new List<string>();
            int Flag = 1;
            lblproductheadercode = null;
            txtcurrentallocation = null;
            Txtamt = null;
            string receiptid = "";
            receiptid = lblreceiptid.Text;

            string Paymode = "";
            Paymode = ddlpaymode.SelectedValue;
            if (ddlpaymode.SelectedValue == "01")
            {
                string PPcode = "";
                string amt = "";
                string Chqno = txtchqno.Text;
                string sbentrycode = txtcursbcode.Text;
                string Payeeid = "";
                try
                {
                    foreach (DataListItem li in dlallocation.Items)
                    {
                        cb = li.FindControl("chk1");
                        if (cb != null)
                        {
                            Chk = (CheckBox)cb;
                        }
                        obj = li.FindControl("lblproductheadercode");
                        if (obj != null)
                        {
                            lblproductheadercode = (Label)obj;
                        }
                        obj = li.FindControl("txtcurrentallocation");
                        if (obj != null)
                        {
                            Txtamt = (TextBox)obj;
                        }
                        if (Chk.Checked == true)
                        {
                            Payeeid = ddlpayee.SelectedValue;
                            ProductController.Insertchequeallocation(lblproductheadercode.Text, Txtamt.Text, sbentrycode, Chqno, 1, Payeeid, receiptid);
                        }
                        else
                        {
                            Txtamt.Text = "0";
                            Payeeid = ddlpayee.SelectedValue;
                            ProductController.Insertchequeallocation(lblproductheadercode.Text, Txtamt.Text, sbentrycode, Chqno, 1, Payeeid, receiptid);
                        }
                    }


                }
                catch (Exception ex)
                {
                }
            }
            else if (ddlpaymode.SelectedValue == "02")
            {
                string PPcode = "";
                string amt = "";
                string Chqno = txtddno.Text;
                string sbentrycode = txtcursbcode.Text;
                string Payeeid = "";
                try
                {
                    foreach (DataListItem li in dlallocation.Items)
                    {
                        cb = li.FindControl("chk1");
                        if (cb != null)
                        {
                            Chk = (CheckBox)cb;
                        }
                        obj = li.FindControl("lblproductheadercode");
                        if (obj != null)
                        {
                            lblproductheadercode = (Label)obj;
                        }
                        obj = li.FindControl("txtcurrentallocation");
                        if (obj != null)
                        {
                            Txtamt = (TextBox)obj;
                        }
                        if (Chk.Checked == true)
                        {
                            Payeeid = ddlpayeedd.SelectedValue;
                            ProductController.Insertchequeallocation(lblproductheadercode.Text, Txtamt.Text, sbentrycode, Chqno, 1, Payeeid, receiptid);
                        }
                        else
                        {
                            Txtamt.Text = "0";
                            Payeeid = ddlpayeedd.SelectedValue;
                            ProductController.Insertchequeallocation(lblproductheadercode.Text, Txtamt.Text, sbentrycode, Chqno, 1, Payeeid, receiptid);
                        }
                    }


                }
                catch (Exception ex)
                {
                }
            }
            else if (ddlpaymode.SelectedValue == "03")
            {
                string PPcode = "";
                string amt = "";
                string Chqno = "";
                string sbentrycode = txtcursbcode.Text;
                string Payeeid = ddlpayeecash.SelectedValue;
                try
                {
                    foreach (DataListItem li in dlallocation.Items)
                    {
                        cb = li.FindControl("chk1");
                        if (cb != null)
                        {
                            Chk = (CheckBox)cb;
                        }
                        obj = li.FindControl("lblproductheadercode");
                        if (obj != null)
                        {
                            lblproductheadercode = (Label)obj;
                        }
                        obj = li.FindControl("txtcurrentallocation");
                        if (obj != null)
                        {
                            Txtamt = (TextBox)obj;
                        }
                        if (Chk.Checked == true)
                        {
                            Payeeid = ddlpayeecash.SelectedValue;
                            ProductController.Insertchequeallocation(lblproductheadercode.Text, Txtamt.Text, sbentrycode, Chqno, 1, Payeeid, receiptid);
                        }
                        else
                        {
                            Txtamt.Text = "0";
                            Payeeid = ddlpayeecash.SelectedValue;
                            ProductController.Insertchequeallocation(lblproductheadercode.Text, Txtamt.Text, sbentrycode, Chqno, 1, Payeeid, receiptid);
                        }
                    }


                }
                catch (Exception ex)
                {
                }
            }

            divErrormessage.Visible = false;
        }
        catch (Exception ex)
        {
            divErrormessage.Visible = true;
            lblerrormessage.Visible = true;
            lblerrormessage.Text = ex.Message;
        }


    }
    protected void btnclosepayment_ServerClick(object sender, System.EventArgs e)
    {
        dlpaymentreceipt.Visible = true;
        divpayment.Visible = false;
        txtpaydate.Text = DateTime.Now.ToString("dd-MM-yyyy");
        txtchequeamt.Text = "";
        txtchqno.Text = "";
        txtchqdate.Text = "";
        txtbankname.Text = "";
        txtddno.Text = "";
        txtdddate.Text = "";
        txtbankname.Text = "";
        txtbranchname.Text = "";
        txtmicrcode.Text = "";
        txtslipamt.Text = "0";
        txtddalloca.Text = "0";
        txtcashalloca.Text = "0";
        tblcheque.Visible = false;
        tblDD.Visible = false;
        tblbankdetails.Visible = false;
        tblcash.Visible = false;
        diverrorPayment.Visible = false;
        lblerrorPayment.Visible = false;
        string Cur_Sub_Code = "";
        Bindpayment(Cur_Sub_Code);
    }

    ///'''''''End of Payment Entry'''''''''''''''''''''''''''''''''''''''''''''''''''

    /// <summary>
    /// '''''''Edit Payment'''''''''''''''''''''''''''''''
    /// </summary>
    /// <remarks></remarks>

    private void Bindpaymodeedit()
    {
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        DataSet ds = AccountController.GetallPaymode();
        BindDDL(ddlpaymodeedit, ds, "Description", "id");
        ddlpaymodeedit.Items.Insert(0, "Select");
        ddlpaymodeedit.SelectedIndex = 0;
    }
    private void BindPayeeedit()
    {
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        DataSet ds = AccountController.Getallpayee();
        BindDDL(ddlpayeeedit, ds, "Payee_Name", "payee_id");
        ddlpayeeedit.Items.Insert(0, "Select");
        ddlpayeeedit.SelectedIndex = 0;
        BindDDL(ddlpayeeddedit, ds, "Payee_Name", "payee_id");
        ddlpayeeddedit.Items.Insert(0, "Select");
        ddlpayeeddedit.SelectedIndex = 0;
        BindDDL(ddlpayeecashedit, ds, "Payee_Name", "payee_id");
        ddlpayeecashedit.Items.Insert(0, "Select");
        ddlpayeecashedit.SelectedIndex = 0;
    }
    private void BindChequeallocationEdit()
    {
        string Sbentrycode = "";
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        Sbentrycode = txtcursbcode.Text;
        string receiptcode = "";
        receiptcode = lblreceiptidedit.Text;
        DataSet ds = AccountController.GetPPgroupbyreceiptcode(receiptcode, 1);
        if (ds.Tables[0].Rows.Count > 0)
        {
            System.Threading.Thread.Sleep(1000);
            dlallocationedit.DataSource = ds;
            dlallocationedit.DataBind();
        }
        else
        {
        }
    }
    private void Bindpaymentdata()
    {

        try
        {

            string Receiptid = "";
            Receiptid = lblreceiptidedit.Text;
            SqlDataReader dr = ProductController.Getreceiptdetailsbyreceiptid(Receiptid, 2);
            if ((((dr) != null)))
            {
                if (dr.Read())
                {
                    txtpaymentdateedit.Text = dr["CreatedOn"].ToString();
                    ddlpaymodeedit.Text = dr["Pay_Mode"].ToString();

                    txtbanknameedit.Text = dr["Pay_BankName"].ToString();
                    txtmicrcodeedit.Text = dr["micrno"].ToString();
                    txtbanknameedit.Text = dr["Pay_BankName"].ToString();
                    txtbranchnameedit.Text = dr["bankbranch"].ToString();


                    if (ddlpaymodeedit.SelectedValue == "01")
                    {
                        tblchequeedit.Visible = true;
                        tblddedit.Visible = false;
                        tblbankdetailsedit.Visible = true;
                        tblcashedit.Visible = false;
                        //tr29.Visible = True
                        //tr30.Visible = False
                        //tr31.Visible = False
                        txtchqdateedit.Text = dr["Pay_InstrDate"].ToString();
                        txtchqnoedit.Text = dr["Pay_InsNum"].ToString();
                        txtchequeamtedit.Text = dr["Instr_Amt"].ToString();
                        ddlpayeeedit.Text = dr["payee_id"].ToString();
                        //ddlpayeeedit.Text = dr("").ToString

                    }
                    else if (ddlpaymodeedit.SelectedValue == "02")
                    {
                        tblchequeedit.Visible = false;
                        tblddedit.Visible = true;
                        tblbankdetailsedit.Visible = true;
                        tblcashedit.Visible = false;
                        //tr29.Visible = False
                        //tr30.Visible = True
                        //tr31.Visible = False
                        txtdddateedit.Text = dr["Pay_InstrDate"].ToString();
                        txtddnoedit.Text = dr["Pay_InsNum"].ToString();
                        txtddamtedit.Text = dr["Instr_Amt"].ToString();
                        ddlpayeeddedit.Text = dr["payee_id"].ToString();

                    }
                    else if (ddlpaymodeedit.SelectedValue == "03")
                    {
                        tblchequeedit.Visible = false;
                        tblddedit.Visible = false;
                        tblbankdetailsedit.Visible = false;
                        //tblcashedit.Visible = True
                        //tr29.Visible = False
                        //tr30.Visible = False
                        //tr31.Visible = True
                        txtcashamtedit.Text = dr["Instr_Amt"].ToString();
                        ddlpayeecashedit.Text = dr["payee_id"].ToString();
                    }

                }
            }
            divErrormessage.Visible = false;
        }
        catch (Exception ex)
        {
            divErrormessage.Visible = true;
            lblerrormessage.Visible = true;
            lblerrormessage.Text = ex.Message;
        }
    }

    protected void ddlpaymodeedit_SelectedIndexChanged(object sender, System.EventArgs e)
    {
        if (ddlpaymodeedit.SelectedValue == "01")
        {
            tblchequeedit.Visible = true;
            tblddedit.Visible = false;
            tblbankdetailsedit.Visible = true;
            tblcashedit.Visible = false;
            //tr29.Visible = True
            //tr30.Visible = False
            //tr31.Visible = False
            //txtchqdateedit.Text = dr("Pay_InstrDate").ToString
            //txtchqnoedit.Text = dr("Pay_InsNum").ToString
            //txtchequeamtedit.Text = dr("Instr_Amt").ToString
            //'ddlpayeeedit.Text = dr("").ToString

        }
        else if (ddlpaymodeedit.SelectedValue == "02")
        {
            tblchequeedit.Visible = false;
            tblddedit.Visible = true;
            tblbankdetailsedit.Visible = true;
            tblcashedit.Visible = false;
            //tr29.Visible = False
            //tr30.Visible = True
            //tr31.Visible = False
            //txtdddateedit.Text = dr("Pay_InstrDate").ToString
            //txtddnoedit.Text = dr("Pay_InsNum").ToString
            //txtddamtedit.Text = dr("Instr_Amt").ToString


        }
        else if (ddlpaymodeedit.SelectedValue == "03")
        {
            tblchequeedit.Visible = false;
            tblddedit.Visible = false;
            tblbankdetailsedit.Visible = false;
            tblcashedit.Visible = true;
            //tr29.Visible = False
            //tr30.Visible = False
            //tr31.Visible = True
            //txtcashamtedit.Text = dr("Instr_Amt").ToString
        }
    }
    protected void txtmicrcodeedit_TextChanged(object sender, System.EventArgs e)
    {
        string MicrCode = "";
        MicrCode = txtmicrcodeedit.Text;
        SqlDataReader dr = AccountController.GetBanknameandAddress(MicrCode);
        if ((((dr) != null)))
        {
            if (dr.Read())
            {
                txtbanknameedit.Text = dr["bankname"].ToString();
                txtbranchnameedit.Text = dr["bankbranch"].ToString();
            }
        }
    }
    protected void btnclosepaymentedit_ServerClick(object sender, System.EventArgs e)
    {
        dlpaymentreceipt.Visible = true;
        diveditpayemnt.Visible = false;
        tblchequeedit.Visible = false;
        tblddedit.Visible = false;
        tblbankdetailsedit.Visible = false;
        tblcashedit.Visible = false;
        //diverrorPaymentedit.Visible = False
        //lblerrorPayment.Visible = False
        string Cur_Sub_Code = "";
        Bindpayment(Cur_Sub_Code);
    }
    protected void btnsavepaymentedit_ServerClick(object sender, System.EventArgs e)
    {
        DateTime Paydate = Today;
        decimal Amtinstr = 0;
        string Sbentrycode = "";
        string Paymode = "";
        string PayInsnum = "";
        DateTime PayInsdate = Today;
        string PayInsBankName = "";
        string InsStatus = "";
        string Inslocation = "";
        DateTime InsDepositdate = Today;
        DateTime IDepositdate = Today;
        DateTime InsBRSDate = Today;
        DateTime IBRSdate = Today;
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        string MicrCode = "";
        string PayHeadCode = "";
        string PayHeadDesc = "";
        DateTime Payidate = Today;
        DateTime paydate1 = Today;
        paydate1 = Today;
        Paydate = Convert.ToDateTime(paydate1, System.Globalization.CultureInfo.GetCultureInfo("Hi-IN").DateTimeFormat);
        InsDepositdate = Today;
        InsBRSDate = Today;
        Sbentrycode = txtcursbcode.Text;
        string Payeeid = "";
        Paymode = ddlpaymodeedit.SelectedValue;
        if (ddlpaymodeedit.SelectedValue == "01")
        {
            Amtinstr =Convert.ToDecimal(txtchequeamtedit.Text);
            PayInsnum = txtchqnoedit.Text;
            PayInsdate = Convert.ToDateTime(txtchqdateedit.Text, System.Globalization.CultureInfo.GetCultureInfo("Hi-IN").DateTimeFormat);
            Payidate = Convert.ToDateTime(txtchqdateedit.Text, System.Globalization.CultureInfo.GetCultureInfo("Hi-IN").DateTimeFormat);
            PayInsBankName = txtbanknameedit.Text;
            InsStatus = "01";
            Inslocation = "";
            IDepositdate = Convert.ToDateTime(InsDepositdate, System.Globalization.CultureInfo.GetCultureInfo("Hi-IN").DateTimeFormat);
            IBRSdate = Convert.ToDateTime(InsBRSDate, System.Globalization.CultureInfo.GetCultureInfo("Hi-IN").DateTimeFormat);
            MicrCode = txtmicrcodeedit.Text;
            Payeeid = ddlpayeeedit.SelectedValue;
        }
        else if (ddlpaymodeedit.SelectedValue == "02")
        {
            Amtinstr =Convert.ToDecimal(txtddamtedit.Text);
            PayInsnum = txtddnoedit.Text;
            PayInsdate = Convert.ToDateTime(txtdddateedit.Text, System.Globalization.CultureInfo.GetCultureInfo("Hi-IN").DateTimeFormat);
            Payidate = Convert.ToDateTime(txtdddateedit.Text, System.Globalization.CultureInfo.GetCultureInfo("Hi-IN").DateTimeFormat);
            PayInsBankName = txtbanknameedit.Text;
            InsStatus = "01";
            Inslocation = "";
            IDepositdate = Convert.ToDateTime(InsDepositdate, System.Globalization.CultureInfo.GetCultureInfo("Hi-IN").DateTimeFormat);
            IBRSdate = Convert.ToDateTime(InsBRSDate, System.Globalization.CultureInfo.GetCultureInfo("Hi-IN").DateTimeFormat);
            MicrCode = txtmicrcodeedit.Text;
            Payeeid = ddlpayeeddedit.SelectedValue;
        }
        else if (ddlpaymodeedit.SelectedValue == "03")
        {
            Amtinstr =Convert.ToDecimal(txtcashamtedit.Text);
            PayInsnum = "";
            PayInsdate = Today;
            Payidate = Convert.ToDateTime(PayInsdate, System.Globalization.CultureInfo.GetCultureInfo("Hi-IN").DateTimeFormat);
            PayInsBankName = "";
            InsStatus = "03";
            Inslocation = "";
            IDepositdate = Convert.ToDateTime(InsDepositdate, System.Globalization.CultureInfo.GetCultureInfo("Hi-IN").DateTimeFormat);
            IBRSdate = Convert.ToDateTime(InsBRSDate, System.Globalization.CultureInfo.GetCultureInfo("Hi-IN").DateTimeFormat);
            MicrCode = txtmicrcodeedit.Text;
            Payeeid = ddlpayeecashedit.SelectedValue;
        }
        string Receiptcode = lblreceiptidedit.Text;
        string Receiptid = AccountController.InsertPayment(3, Paydate, Amtinstr, Sbentrycode, Paymode, PayInsnum, Payidate, PayInsBankName, InsStatus, Inslocation,
        IDepositdate, IBRSdate, UserID, MicrCode, PayHeadCode, PayHeadDesc, Payeeid, Receiptcode);
        //Bindpayment(Sbentrycode)
        BindStudentLedger();
        BindChequeOutstanding();
        Bindlist(Sbentrycode);
        //ddlpayhead.SelectedIndex = 0
        dlpaymentreceipt.Visible = true;
        diveditpayemnt.Visible = false;
        dynamic Cur_Sb_Code = "";
        Bindpayment(Cur_Sb_Code);
    }

    /// <summary>
    /// '''''''''''End of Payment Edit
    /// </summary>
    /// <remarks></remarks>

    private void BindStudentLedger()
    {
        string Sbentrycode = "";
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        Sbentrycode = txtcursbcode.Text;
        DataSet ds = AccountController.Getstudentledgerbysbentrycode(Sbentrycode);
        if (ds.Tables[0].Rows.Count > 0)
        {
            //System.Threading.Thread.Sleep(1000)
            dlstudentledger.DataSource = ds;
            dlstudentledger.DataBind();

        }
        else
        {
        }
    }

    private void BindChequeOutstanding()
{
	string Sbentrycode = "";
	HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
	string UserID = cookie.Values["UserID"];
	string UserName = cookie.Values["UserName"];
	Sbentrycode = txtcursbcode.Text;

	SqlDataReader dr = AccountController.GetChequeOutstanding(Sbentrycode);
	if ((((dr) != null))) {
		if (dr.Read()) {
			txtcurrentout.Text = dr["outstanding"].ToString();
		}
	}
	if (lblstdstaus.Text == "Student Status : Pending" &&Convert.ToInt32(txtcurrentout.Text) <= 0) {
		string Output = AccountController.Confirmadmission(Sbentrycode);

	} else if (lblstdstaus.Text == "Student Status : Confirmed") {
		goto Rowexit;
	} else {
	}
	rowexit:
}




    private void BindStudentdetails(string Oppid)
    {

        try
        {

            HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
            string UserID = cookie.Values["UserID"];
            string UserName = cookie.Values["UserName"];
            string Hiphen = "-";
            SqlDataReader dr = AccountController.GetStudentDetailsbyOppid(Oppid);
            try
            {
                if ((((dr) != null)))
                {
                    if (dr.Read())
                    {
                        txtConapp.Text = dr["student_app_no"].ToString();
                        txtconAppentrydate.Text = dr["entrydate"].ToString();
                        txtconappsubdate.Text = dr["enrollon"].ToString();
                        txtconstdname.Text = dr["Name"].ToString();
                        lblstudentname.Text = Hiphen + " " + dr["Name"].ToString();
                        BindNationality();
                        ddlnationality.SelectedValue = dr["nationality"].ToString();
                        BindMothertongue();
                        ddlmothertongue.SelectedValue = dr["mother_tongue"].ToString();
                        BindReligion();
                        ddlreligion.SelectedValue = dr["religion"].ToString();
                        BindCaste();
                        ddlcaste.SelectedValue = dr["caste"].ToString();
                        txtconsubcaste.Text = dr["subcaste"].ToString();
                        Bindgroup();
                        ddlgroup.SelectedValue = dr["category"].ToString();
                        string PhysicallyChalleged = dr["physically_challenege"].ToString();


                        if (PhysicallyChalleged == "Y")
                        {
                            ddlphysicalchallenged.SelectedValue = "Y";
                        }
                        else
                        {
                            ddlphysicalchallenged.SelectedValue = "N";
                        }
                        BindStudentfrom();
                        ddlstudentfrom.SelectedValue = dr["student_from"].ToString();
                        BindmediumofInstruction();
                        ddlConmediumofinstr.SelectedValue = dr["medium_instructions"].ToString();
                        Bindstay();
                        ddlstay.SelectedValue = dr["stay_preference"].ToString();
                        BindConYearofpassing();
                        ddlconyearofpassing.SelectedValue = dr["year_passing"].ToString();
                        BindConCompany();
                        ddlconCompany.SelectedValue = dr["company_code"].ToString();
                        BindConDivision();
                        ddlcondivision.SelectedValue = dr["division_code"].ToString();
                        BindConcenters();
                        ddlconcenter.SelectedValue = dr["center_code"].ToString();
                        BindConAcademicYear();
                        //ddlconacademicyear.SelectedValue = dr("acad_year").ToString
                        //BindConstream()
                        //ddlconstream.SelectedValue = dr("stream_code").ToString
                    }
                }
            }
            catch (Exception ex)
            {
            }
            divErrormessage.Visible = false;
        }
        catch (Exception ex)
        {
            divErrormessage.Visible = true;
            lblerrormessage.Visible = true;
            lblerrormessage.Text = ex.Message;
        }
    }
    private void BindConYearofpassing()
    {
        DataSet ds = ProductController.GetallYearofpassing();
        BindDDL(ddlconyearofpassing, ds, "Description", "ID");
        ddlconyearofpassing.Items.Insert(0, "Select");
        ddlconyearofpassing.SelectedIndex = 0;
    }

    private void BindConCompany()
    {
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        DataSet ds = ProductController.GetUser_Company_Division_Zone_Center(1, UserID, "", "", "");
        BindDDL(ddlconCompany, ds, "Company_Name", "Company_Code");
        ddlconCompany.Items.Insert(0, "Select");
        ddlconCompany.SelectedIndex = 0;
    }
    private void BindConDivision()
    {
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        DataSet ds = ProductController.GetUser_Company_Division_Zone_Center(2, UserID, "", "", ddlconCompany.SelectedValue);
        BindDDL(ddlcondivision, ds, "Division_Name", "Division_Code");
        ddlcondivision.Items.Insert(0, "Select");
        ddlcondivision.SelectedIndex = 0;
    }

    private void BindConcenters()
    {
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        DataSet ds = ProductController.GetUser_Company_Division_Zone_Center(5, UserID, ddlcondivision.SelectedValue, "", ddlconCompany.SelectedValue);
        BindDDL(ddlconcenter, ds, "Center_name", "Center_Code");
        ddlconcenter.Items.Insert(0, "Select");
        ddlconcenter.SelectedIndex = 0;
    }
    private void Bindstay()
    {
        DataSet ds = ProductController.GetallStay();
        BindDDL(ddlstay, ds, "Description", "id");
        ddlstay.Items.Insert(0, "Select");
        ddlstay.SelectedIndex = 0;
    }
    private void BindmediumofInstruction()
    {
        DataSet ds = ProductController.GetallMediumofInstruction();
        BindDDL(ddlConmediumofinstr, ds, "Description", "id");
        ddlConmediumofinstr.Items.Insert(0, "Select");
        ddlConmediumofinstr.SelectedIndex = 0;
    }
    private void BindStudentfrom()
    {
        DataSet ds = ProductController.GetallResidenceType();
        BindDDL(ddlstudentfrom, ds, "Description", "ID");
        ddlstudentfrom.Items.Insert(0, "Select");
        ddlstudentfrom.SelectedIndex = 0;
    }

    private void BindNationality()
    {
        DataSet ds = ProductController.GetallNationality();
        BindDDL(ddlnationality, ds, "Description", "id");
        ddlnationality.Items.Insert(0, "Select");
        ddlnationality.SelectedIndex = 0;
    }
    private void BindMothertongue()
    {
        DataSet ds = ProductController.GetallMothertongue();
        BindDDL(ddlmothertongue, ds, "Description", "id");
        ddlmothertongue.Items.Insert(0, "Select");
        ddlmothertongue.SelectedIndex = 0;
    }

    private void BindReligion()
    {
        DataSet ds = ProductController.GetallReligion();
        BindDDL(ddlreligion, ds, "Description", "id");
        ddlreligion.Items.Insert(0, "Select");
        ddlreligion.SelectedIndex = 0;
    }

    private void BindCaste()
    {
        DataSet ds = ProductController.GetallCaste();
        BindDDL(ddlcaste, ds, "Description", "id");
        ddlcaste.Items.Insert(0, "Select");
        ddlcaste.SelectedIndex = 0;
    }
    private void Bindgroup()
    {
        DataSet ds = ProductController.GetallStudentcastegroup();
        BindDDL(ddlgroup, ds, "Description", "id");
        ddlgroup.Items.Insert(0, "Select");
        ddlgroup.SelectedIndex = 0;
    }
    private void BindPayplan()
    {
        DataSet ds = AccountController.GetAllPayplan();
        BindDDL(ddlpayplan, ds, "Pay_Plan_Description", "Pay_Plan_Code");
        ddlpayplan.Items.Insert(0, "Select");
        ddlpayplan.SelectedIndex = 0;
    }
    private void BindConAcademicYear()
    {
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        string Currentaystring = "";
        Currentaystring = ddllacadyear.SelectedValue;
        DataSet ds = ProductController.GetAcademicYearbyCenter_Promote(ddlconcenter.SelectedValue, Currentaystring);
        BindDDL(ddlconacademicyear, ds, "AY_String", "AY_String");
        ddlconacademicyear.Items.Insert(0, "Select");
        ddlconacademicyear.SelectedIndex = 0;
    }
    protected void ddlconacademicyear_SelectedIndexChanged(object sender, System.EventArgs e)
    {
        BindConstream();
    }
    private void BindConstream()
    {
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        DataSet ds = ProductController.GetStreamby_Center_AcademicYear_Promote(ddlconcenter.SelectedValue, ddlconacademicyear.SelectedValue);
        BindDDL(ddlconstream, ds, "Stream_Sdesc", "Stream_Code");
        ddlconstream.Items.Insert(0, "Select");
        ddlconstream.SelectedIndex = 0;
        ddltransport.Items.Insert(0, "Select");
        ddltransport.SelectedIndex = 0;
    }
    protected void ddlconstream_SelectedIndexChanged(object sender, System.EventArgs e)
    {
        //dltransport.Items.Insert(0, "Select")
        ddltransport.Items.Insert(1, "Yes");
        ddltransport.Items.Insert(2, "No");
        ddltransport.SelectedIndex = 0;
    }
    protected void ddltransport_SelectedIndexChanged(object sender, System.EventArgs e)
    {
        if (ddltransport.SelectedIndex == 0)
        {
            div8.Visible = false;
            divcreatebutton.Visible = false;
        }
        else
        {
            div8.Visible = true;
            BindConvert();
            BindMandateSubjects();
            BindCompulsorySubjects();
            BindOptionalSubject();
            BindPayplan();
            divcreatebutton.Visible = false;
        }

    }

    private void BindConvert()
    {
        string Oppor_id = "";
        Oppor_id = lbloppurid.Text;
        string Documenttype = "";
        Documenttype = "DC05";
        string StreamCode = "";
        StreamCode = ddlconstream.SelectedValue;
        string Transport = "";
        if (ddltransport.SelectedValue == "Yes")
        {
            Transport = "02";
        }
        else if (ddltransport.SelectedValue == "No")
        {
            Transport = "01";
        }

        DataSet ds = AccountController.GetPricingforpromote(1, Oppor_id, Documenttype, StreamCode, Transport);
        if (ds.Tables(0).Rows.Count > 0)
        {
            dlproductHeader.DataSource = ds;
            dlproductHeader.DataBind();

        }
        else
        {
        }
    }
    private void BindMandateSubjects()
    {
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        string StreamName = "";
        string Center = "";
        StreamName = ddlconstream.SelectedValue;
        Center = ddlconcenter.SelectedValue;
        SqlDataReader dr = ProductController.GetMandatesubjectsbyStream(1, StreamName, Center);
        try
        {
            if ((((dr) != null)))
            {
                if (dr.Read())
                {
                    string MandateSubject = dr["SGR_DESC"].ToString();
                    txtmandateSubjects.Text = MandateSubject;
                    txtvalue.Text = dr["Voucher_Amount"].ToString();
                    lblmaterialcode.Text = dr["SGR_Material"].ToString();
                }
            }

        }
        catch (Exception ex)
        {
        }
    }

    private void BindCompulsorySubjects()
    {
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        string StreamName = "";
        string Center = "";
        StreamName = ddlconstream.SelectedValue;
        Center = ddlconcenter.SelectedValue;
        DataSet ds = ProductController.GetSubjectsbyStreamCode(2, StreamName, Center);
        BindDDL(ddllanguage, ds, "SGR_DESC", "SGR_Material");
        ddllanguage.Items.Insert(0, "Select");
        ddllanguage.SelectedIndex = 0;
    }

    private void BindOptionalSubject()
    {
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        string StreamName = "";
        string Center = "";
        StreamName = ddlconstream.SelectedValue;
        Center = ddlconcenter.SelectedValue;

        DataSet ds = ProductController.GetSubjectsbyStreamCode(3, StreamName, Center);
        if (ds.Tables[0].Rows.Count > 0)
        {
            dlselective.DataSource = ds;
            dlselective.DataBind();
        }
        else
        {
        }
    }

    protected void ddllanguage_SelectedIndexChanged(object sender, System.EventArgs e)
    {
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        string MaterialCode = "";
        string StreamName = "";
        string Center = "";
        StreamName = ddlconstream.SelectedValue;
        Center = ddlconcenter.SelectedValue;
        MaterialCode = ddllanguage.SelectedValue;

        SqlDataReader dr = AccountController.GetlanguageValuebyMaterialCode(Center, StreamName, MaterialCode);
        try
        {
            if ((((dr) != null)))
            {
                if (dr.Read())
                {
                    txtLangvalue.Text = dr["Voucher_amount"].ToString();
                }
            }

        }
        catch (Exception ex)
        {
        }

    }


    protected void btncontinue_ServerClick(object sender, System.EventArgs e)
    {
        //Dim MandateSubjects As String = ""
        //Dim OptionalSubjects As String = ""
        //Dim Selectivesubjects As String = ""
        //MandateSubjects = lblmaterialcode.Text
        //OptionalSubjects = ddllanguage.SelectedValue
        //Dim obj As Object
        //Dim Chk As CheckBox
        //Dim lblSelectmaterialcode As Label
        //Dim list As New List(Of String)
        //Dim List1 As New List(Of String)
        //Dim Sgrcode As String = ""
        //Dim cb As CheckBox



        //For Each li As DataListItem In dlselective.Items
        //    obj = li.FindControl("lblmaterialcodeadd")
        //    If obj IsNot Nothing Then
        //        lblSelectmaterialcode = DirectCast(obj, Label)
        //    End If

        //    cb = li.FindControl("ckhselect1")
        //    If cb IsNot Nothing Then
        //        Chk = DirectCast(cb, CheckBox)
        //    End If

        //    If Chk.Checked = True Then
        //        list.Add(lblSelectmaterialcode.Text)
        //        Sgrcode = string.Join(",", list.ToArray())

        //    End If
        //Next
        //If Sgrcode.Length > 0 Then
        //    diverrorsubject.Visible = False
        //    lblerrorsub.Visible = False
        //    divcreatebutton.Visible = True
        //    Dim MaterialCode As String = ""
        //    Dim Doctype As String = ""
        //    Dim Opp_id As String = ""
        //    Dim StreamCode As String = ""
        //    Opp_id = lbloppurid.Text
        //    MaterialCode = MandateSubjects + "," + OptionalSubjects + "," + Sgrcode
        //    Doctype = "DC05"
        //    StreamCode = ddlconstream.SelectedValue
        //    Dim Transport As String = ""
        //    If ddltransport.SelectedValue = "Yes" Then
        //        Transport = "02"
        //    ElseIf ddltransport.SelectedValue = "No" Then
        //        Transport = "01"
        //    End If

        //    Dim ds As DataSet = AccountController.GetPricingprocedureHeaderValuePromote(Opp_id, MaterialCode, Doctype, StreamCode, Transport)
        //    If ds.Tables(0).Rows.Count > 0 Then
        //        dlppheader.DataSource = ds
        //        dlppheader.DataBind()
        //    Else

        //    End If
        //Else
        //    diverrorsubject.Visible = True
        //    lblerrorsub.Visible = True
        //    lblerrorsub.Text = "Select Subject Group"
        //End If


    }



    protected void btnregistrationno_ServerClick(object sender, System.EventArgs e)
    {
        Response.Redirect("Series.aspx");
    }

    protected void btnproceedprint_ServerClick(object sender, System.EventArgs e)
    {
        //Dim cookie As HttpCookie = Request.Cookies.[Get]("MyCookiesLoginInfo")
        //Dim UserID As String = cookie.Values["UserID"]
        //Dim UserName As String = cookie.Values["UserName"]
        //lblpagetitle1.Text = "Accounts"
        //lblpagetitle2.Text = "Print Receipt"
        //limidbreadcrumb.Visible = True
        //lblmidbreadcrumb.Text = "Accounts"
        //lilastbreadcrumb.Visible = True
        //lbllastbreadcrumb.Text = "Print Receipt"
        //divSuccessmessage.Visible = False
        //divErrormessage.Visible = False
        //upnlsearch.Visible = False
        //Upnlviewledger.Visible = False
        //Upnlprintreceipt.Visible = True
        //System.Threading.Thread.Sleep(1000)
        string sbentrycode = "";
        sbentrycode = txtcursbcode.Text;
        string SB = encryptQueryString(sbentrycode);
        Response.Redirect("Print_Receipt.aspx?SB=" + SB);
    }
    public string encryptQueryString(string strQueryString)
    {
        Encryption_Decryption oEs1 = new Encryption_Decryption();
        string EncriptStr = oEs1.EncryptString128Bit(strQueryString, "!#$a54?3");
        return EncriptStr;
    }






    //For Promote Student
    protected void apromotestudent_ServerClick(object sender, System.EventArgs e)
    {
        //ScriptManager.RegisterClientScriptBlock(Me, Me.GetType(), "k2", "<script type=""text/javascript"">$(function () { $('#PromoteStudent').modal('show') });</script>", False)
        System.Threading.Thread.Sleep(100);
        lblpagetitle1.Text = "Promote Student";
        lblpagetitle2.Text = "";
        limidbreadcrumb.Visible = true;
        lblmidbreadcrumb.Text = "Account";
        lilastbreadcrumb.Visible = true;
        lbllastbreadcrumb.Text = "Promote Student";
        divSuccessmessage.Visible = false;
        divErrormessage.Visible = false;
        upnlsearch.Visible = false;
        Upnlviewledger.Visible = false;
        Upnlprintreceipt.Visible = false;
        upnlconvert.Visible = true;
        diverrorsubject.Visible = false;
        divSuccessrsubject.Visible = false;
        div8.Visible = false;
        listudentstatus.Visible = false;
        string SBEntrycode = txtcursbcode.Text;
        string Oppur_id = AccountController.GetOppidbysbentrycode(SBEntrycode);
        lbloppurid.Text = Oppur_id;
        string Accountid = AccountController.GetAccountidbysbentrycode(SBEntrycode);
        lblaccountid.Text = Accountid;
        BindStudentdetails(Oppur_id);
    }
    protected void btncreateaccount_ServerClick(object sender, System.EventArgs e)
    {
        string MandateSubjects = "";
        string OptionalSubjects = "";
        string Selectivesubjects = "";
        MandateSubjects = lblmaterialcode.Text;
        OptionalSubjects = ddllanguage.SelectedValue;
        object obj = null;
        CheckBox Chk = default(CheckBox);
        Label lblSelectmaterialcode = default(Label);
        List<string> list = new List<string>();
        List<string> List1 = new List<string>();
        string Sgrcode = "";
        CheckBox cb = default(CheckBox);



        foreach (DataListItem li in dlselective.Items)
        {
            obj = li.FindControl("lblmaterialcodeadd");
            if (obj != null)
            {
                lblSelectmaterialcode = (Label)obj;
            }

            cb = li.FindControl("ckhselect1");
            if (cb != null)
            {
                Chk = (CheckBox)cb;
            }

            if (Chk.Checked == true)
            {
                list.Add(lblSelectmaterialcode.Text);
                Sgrcode = string.Join(",", list.ToArray());

            }
        }
        if (Sgrcode.Length > 0)
        {
            diverrorsubject.Visible = false;
            lblerrorsub.Visible = false;
            divcreatebutton.Visible = true;
            string MaterialCode = "";
            string Doctype = "";
            string Opp_id = "";
            string Payplan = "";
            HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
            string UserID = cookie.Values["UserID"];
            string UserName = cookie.Values["UserName"];
            Opp_id = lbloppurid.Text;
            MaterialCode = MandateSubjects + "," + OptionalSubjects + "," + Sgrcode;
            Doctype = "DC05";
            Payplan = ddlpayplan.SelectedValue;
            string Stream = "";
            string Accountid = "";
            Stream = ddlconstream.SelectedValue;
            string Accid = "";
            Accid = lblaccountid.Text;
            Accountid = AccountController.PromoteStudent(Opp_id, MaterialCode, Doctype, Payplan, UserID, Stream, Accid);
        }
        else
        {
            diverrorsubject.Visible = true;
            lblerrorsub.Visible = true;
            lblerrorsub.Text = "Select Subject Group";
        }

        divSuccessmessage.Visible = true;
        lblsuccessMessage.Visible = true;
        lblsuccessMessage.Text = "Student Successfully promoted";
        btncreateaccount.Visible = false;
        btncontinue.Visible = false;
    }
    protected void btnclosemodalProm_ServerClick(object sender, System.EventArgs e)
    {
        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "k2", "<script type=\"text/javascript\">$(function () { $('#PromoteStudent').modal('hide') });</script>", false);
    }
    protected void btnclosemodalProm1_ServerClick(object sender, System.EventArgs e)
    {
        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "k2", "<script type=\"text/javascript\">$(function () { $('#PromoteStudent').modal('hide') });</script>", false);
    }
    //For Message Box

    protected void btnclosemessage_ServerClick(object sender, System.EventArgs e)
    {
        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "k2", "<script type=\"text/javascript\">$(function () { $('#message').modal('hide') });</script>", false);
    }

    protected void btnclosemessage1_ServerClick(object sender, System.EventArgs e)
    {
        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "k2", "<script type=\"text/javascript\">$(function () { $('#message').modal('hide') });</script>", false);
    }

    //For Change Subject

    protected void achangesubject_ServerClick(object sender, System.EventArgs e)
    {
    }


    //For Swap Cheque
    //Protected Sub aswapcheque_ServerClick(ByVal sender As Object, ByVal e As System.EventArgs) Handles aswapcheque.ServerClick
    //    Bindlistchequeswap()
    //    ScriptManager.RegisterClientScriptBlock(Me, Me.GetType(), "k2", "<script type=""text/javascript"">$(function () { $('#swapcheque').modal('show') });</script>", False)
    //End Sub

    //Protected Sub btnSwapClose_ServerClick(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnSwapClose.ServerClick
    //    ScriptManager.RegisterClientScriptBlock(Me, Me.GetType(), "k2", "<script type=""text/javascript"">$(function () { $('#swapcheque').modal('hide') });</script>", False)
    //End Sub

    //Protected Sub btnSwapClose1_ServerClick(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnSwapClose1.ServerClick
    //    ScriptManager.RegisterClientScriptBlock(Me, Me.GetType(), "k2", "<script type=""text/javascript"">$(function () { $('#swapcheque').modal('hide') });</script>", False)
    //End Sub
    //Private Sub Bindlistchequeswap()

    //End Sub
    //Protected Sub btnSaveswap_ServerClick(ByVal sender As Object, ByVal e As System.EventArgs) Handles btnSaveswap.ServerClick

    //End Sub

    //For Refund Request




    //Refund Request
    //Refund Request






    // Add Product

    protected void aaddsubject_ServerClick(object sender, System.EventArgs e)
    {
        BindAddProduct();
        Divaddproderror.Visible = false;
        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "k2", "<script type=\"text/javascript\">$(function () { $('#Addproduct').modal('show') });</script>", false);
    }
    private void BindAddProduct()
    {
        string SBEntrycode = "";
        SBEntrycode = txtcursbcode.Text;
        DataSet DSAddproduct = AccountController.GetProducttobeaddedbySbentrycode(1, SBEntrycode);
        if (DSAddproduct.Tables(0).Rows.Count > 0)
        {
            dladdproduct.DataSource = DSAddproduct;
            dladdproduct.DataBind();
            Divaddproderror.Visible = false;
            lbladdproderror.Visible = false;
        }
        else
        {
            Divaddproderror.Visible = true;
            lbladdproderror.Visible = true;
            lbladdproderror.Text = "No Product for addition";
        }
    }
    protected void btnaddprodsave_ServerClick(object sender, System.EventArgs e)
    {
        object obj = null;
        CheckBox Chk = default(CheckBox);
        CheckBox cb = default(CheckBox);
        Label lblsgrname = default(Label);
        Label lblmaterialcode = default(Label);
        List<string> list = new List<string>();
        List<string> List1 = new List<string>();
        lblmaterialcode = null;
        lblsgrname = null;
        string Sgrcode = "";
        string sbentrycode = txtcursbcode.Text;
        try
        {
            //Dim chk1 As HtmlInputCheckBox = DirectCast(Me.dlsubjectgroup.Items(0).FindControl("Chksgr"), HtmlInputCheckBox)
            //If chk1 IsNot Nothing Then


            foreach (DataListItem li in dladdproduct.Items)
            {
                cb = li.FindControl("ckhselect1");
                if (cb != null)
                {
                    Chk = (CheckBox)cb;
                }
                obj = li.FindControl("lblvoucherDesc");
                if (obj != null)
                {
                    lblsgrname = (Label)obj;
                }
                obj = li.FindControl("lblmaterialcodeadd");
                if (obj != null)
                {
                    lblmaterialcode = (Label)obj;
                }

                if (Chk.Checked == true)
                {
                    list.Add(lblmaterialcode.Text);
                    Sgrcode = string.Join(",", list.ToArray());

                }
            }
            if (Sgrcode.Length > 0)
            {
                //ProductController.InsertAddandRemoveItem(sbentrycode, Sgrcode, 1)
                divSuccessmessage.Visible = true;
                lblsuccessMessage.Visible = true;
                lblsuccessMessage.Text = "Product / Item Group Successfully Added";
                Bindlist(sbentrycode);
                BindStudentSubjectGroup(sbentrycode);
                Bindpayment(sbentrycode);
                BindPaymode();
                BindStudentLedger();
                BindChequeOutstanding();
                //BindPayhead()
                Bindrequestdetails();
                //Response.Redirect("ManageSubjectGroup.aspx?SBEC=" + LTrim(RTrim(Request.QueryString("SBEC"))))
            }
            else
            {
                Divaddproderror.Visible = true;
                lbladdproderror.Visible = true;
                lbladdproderror.Text = "Select Product!!";

            }

        }
        catch (Exception ex)
        {
        }

    }
    protected void btnaddprodclose_ServerClick(object sender, System.EventArgs e)
    {
        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "k2", "<script type=\"text/javascript\">$(function () { $('#AddProduct').modal('hide') });</script>", false);
    }
    protected void btnaddprodclose1_ServerClick(object sender, System.EventArgs e)
    {
        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "k2", "<script type=\"text/javascript\">$(function () { $('#AddProduct').modal('hide') });</script>", false);
    }

    //Remove Product
    protected void aremovesubject_ServerClick(object sender, System.EventArgs e)
    {
        BindRemoveProduct();
        divremoveproderror.Visible = false;
        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "k2", "<script type=\"text/javascript\">$(function () { $('#Removeproduct').modal('show') });</script>", false);
    }
    private void BindRemoveProduct()
    {
        string SBEntrycode = "";
        SBEntrycode = txtcursbcode.Text;
        DataSet dsremoveproduct = AccountController.GetProducttobeaddedbySbentrycode(2, SBEntrycode);
        if (dsremoveproduct.Tables(0).Rows.Count > 0)
        {
            dlremoveproduct.DataSource = dsremoveproduct;
            dlremoveproduct.DataBind();
            divremoveproderror.Visible = false;
            lblremoveproderror.Visible = false;
        }
        else
        {
            divremoveproderror.Visible = true;
            lblremoveproderror.Visible = true;
            lblremoveproderror.Text = "No Product for removal";
        }
    }
    protected void btnremoveclose_ServerClick(object sender, System.EventArgs e)
    {
        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "k2", "<script type=\"text/javascript\">$(function () { $('#Removeproduct').modal('hide') });</script>", false);
    }
    protected void btnremoveclose1_ServerClick(object sender, System.EventArgs e)
    {
        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "k2", "<script type=\"text/javascript\">$(function () { $('#Removeproduct').modal('hide') });</script>", false);
    }
    protected void btnremovesave_ServerClick(object sender, System.EventArgs e)
    {
        object obj = null;
        CheckBox Chk = default(CheckBox);
        CheckBox cb = default(CheckBox);
        Label lblsgrname = default(Label);
        Label lblmaterialcode = default(Label);
        List<string> list = new List<string>();
        List<string> List1 = new List<string>();
        lblmaterialcode = null;
        lblsgrname = null;
        string Sgrcode = "";
        string sbentrycode = txtcursbcode.Text;
        try
        {
            //Dim chk1 As HtmlInputCheckBox = DirectCast(Me.dlsubjectgroup.Items(0).FindControl("Chksgr"), HtmlInputCheckBox)
            //If chk1 IsNot Nothing Then


            foreach (DataListItem li in dlremoveproduct.Items)
            {
                cb = li.FindControl("ckhselect1");
                if (cb != null)
                {
                    Chk = (CheckBox)cb;
                }
                obj = li.FindControl("lblvoucherDesc");
                if (obj != null)
                {
                    lblsgrname = (Label)obj;
                }
                obj = li.FindControl("lblmaterialcodeadd");
                if (obj != null)
                {
                    lblmaterialcode = (Label)obj;
                }

                if (Chk.Checked == true)
                {
                    list.Add(lblmaterialcode.Text);
                    Sgrcode = string.Join(",", list.ToArray());

                }
            }
            if (Sgrcode.Length > 0)
            {
                //ProductController.InsertAddandRemoveItem(sbentrycode, Sgrcode, 2)
                divSuccessmessage.Visible = true;
                lblsuccessMessage.Visible = true;
                lblsuccessMessage.Text = "Product / Item Group Successfully Removed";
                Bindlist(sbentrycode);
                BindStudentSubjectGroup(sbentrycode);
                Bindpayment(sbentrycode);
                //BindPaymode()
                BindStudentLedger();
                BindChequeOutstanding();
                BindPayhead();
                Bindrequestdetails();
                //Response.Redirect("ManageSubjectGroup.aspx?SBEC=" + LTrim(RTrim(Request.QueryString("SBEC"))))
            }
            else
            {
                Divaddproderror.Visible = true;
                lbladdproderror.Visible = true;
                lbladdproderror.Text = "Select Product!!";

            }

        }
        catch (Exception ex)
        {
        }
    }


    //Bind Request Details in Student Ledger
    private void Bindrequestdetails()
    {
        string Sbentrycode = "";
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        Sbentrycode = txtcursbcode.Text;

        DataSet ds = AccountController.GetRequestDetails(Sbentrycode, 1);
        if (ds.Tables(0).Rows.Count > 0)
        {
            //System.Threading.Thread.Sleep(1000)
            dlrequestdetails.DataSource = ds;
            dlrequestdetails.DataBind();
            div12.Visible = false;
            Label2.Visible = false;
        }
        else
        {
            div12.Visible = true;
            Label2.Visible = true;
            Label2.Text = "No Request Records Found!";
        }
    }

    protected void dlrequestdetails_ItemCommand(object source, System.Web.UI.WebControls.DataListCommandEventArgs e)
    {
    }


    protected void dlrequestdetails_ItemDataBound(object sender, System.Web.UI.WebControls.DataListItemEventArgs e)
    {
    }






    ///'''''''''''''''''''''''''''''''''''''''''''''Request''''''''''''''''''''''''''''''''''''''''''''''''''''''




    //For Discount Request
    protected void adiscountreq_ServerClick(object sender, System.EventArgs e)
    {
        BindProductheaderDiscount();
        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "k2", "<script type=\"text/javascript\">$(function () { $('#Discountreq').modal('show') });</script>", false);
    }
    private void BindProductheaderDiscount()
    {
        DataSet ds = AccountController.GetallPPgroup(1, "", "");
        BindDDL(ddlproductheaderdiscount, ds, "pricing_procedure_name", "pricing_procedure_code");
        ddlproductheaderdiscount.Items.Insert(0, "Select");
        ddlproductheaderdiscount.SelectedIndex = 0;
    }
    protected void ddlproductheaderdiscount_SelectedIndexChanged(object sender, System.EventArgs e)
    {
        BindDiscounttype();
        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "k2", "<script type=\"text/javascript\">$(function () { $('#Discountreq').modal('show') });</script>", false);
    }

    private void BindDiscounttype()
    {
        int Flag = 2;
        string Requesttype = "";
        if (lblstdstaus.Text == "Student Status : Pending")
        {
            Requesttype = "RQ01";
        }
        else if (lblstdstaus.Text == "Student Status : Confirmed")
        {
            Requesttype = "RQ05";
        }
        string PPgroup = "";
        PPgroup = ddlproductheaderdiscount.SelectedValue;
        DataSet ds = AccountController.GetallPPgroup(Flag, Requesttype, PPgroup);
        BindDDL(ddldiscounttype, ds, "voucher_description", "voucher_type");
        ddldiscounttype.Items.Insert(0, "Select");
        ddldiscounttype.SelectedIndex = 0;
        //ScriptManager.RegisterClientScriptBlock(Me, Me.GetType(), "k2", "<script type=""text/javascript"">$(function () { $('#Discountreq').modal('show') });</script>", False)
    }

    protected void btnsavediscreq_ServerClick(object sender, System.EventArgs e)
    {
        int Flag = 0;
        string Requesttypecode = "";
        string Sbentrycode = "";
        string Conditiontype = "";
        string CenterRemarks = "";
        decimal CenterRequestamt = 0;
        int Levelno = 0;
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        Sbentrycode = txtcursbcode.Text;
        Flag = 1;
        if (lblstdstaus.Text == "Student Status : Pending")
        {
            Requesttypecode = "RQ01";
        }
        else if (lblstdstaus.Text == "Student Status : Confirmed")
        {
            Requesttypecode = "RQ05";
        }
        //Requesttypecode = "RQ01"
        Conditiontype = "";
        CenterRemarks = "";
        CenterRequestamt = 0;
        Levelno = 1;
        //Dim Checkforrequest As String = AccountController.Insertrequest(Flag, Requesttypecode, Sbentrycode, Conditiontype, CenterRemarks,
        //                                                CenterRequestamt, Levelno, UserID)
        //If Checkforrequest = "0" Then
        //    divreqerrmessage1.Visible = True
        //    divreqsucmessage1.Visible = False
        //    lblerrorreq1.Visible = True
        //    lblerrorreq1.Text = "Request Already exists for this student"
        //    ScriptManager.RegisterClientScriptBlock(Me, Me.GetType(), "k2", "<script type=""text/javascript"">$(function () { $('#message').modal('show') });</script>", False)
        //Else

        Flag = 2;
        if (lblstdstaus.Text == "Student Status : Pending")
        {
            Requesttypecode = "RQ01";
        }
        else if (lblstdstaus.Text == "Student Status : Confirmed")
        {
            Requesttypecode = "RQ05";
        }
        Conditiontype = ddldiscounttype.SelectedValue;
        CenterRemarks = txtDiscremarks.Text;
        CenterRequestamt =Convert.ToDecimal(txtdiscountamt.Text);
        Levelno = 1;

        string response = AccountController.Insertrequest(Flag, Requesttypecode, Sbentrycode, Conditiontype, CenterRemarks, CenterRequestamt, Levelno, UserID);
        //divreqerrmessage1.Visible = False
        //divreqsucmessage1.Visible = True
        //lblsuccessreq1.Visible = True
        //lblsuccessreq1.Text = "Request Successfully Stored"
        //ScriptManager.RegisterClientScriptBlock(Me, Me.GetType(), "k2", "<script type=""text/javascript"">$(function () { $('#message').modal('show') });</script>", False)
        //'End If
        divSuccessmessage.Visible = true;
        lblsuccessMessage.Visible = true;
        lblsuccessMessage.Text = "Request Successfully Stored";
        Bindrequestdetails();

    }
    protected void btnclosemodalDisc_ServerClick(object sender, System.EventArgs e)
    {
        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "k2", "<script type=\"text/javascript\">$(function () { $('#Discountreq').modal('hide') });</script>", false);
    }

    protected void btnclosemodalDisc1_ServerClick(object sender, System.EventArgs e)
    {
        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "k2", "<script type=\"text/javascript\">$(function () { $('#Discountreq').modal('hide') });</script>", false);
    }

    ///'''''''''''''''''''Concession Request''''''''''''''''''''''''''''''''''
    //For Concession Request
    protected void aconcessionreq_ServerClick(object sender, System.EventArgs e)
    {
        BindConcessionPPGroup();
        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "k2", "<script type=\"text/javascript\">$(function () { $('#Concessionreq').modal('show') });</script>", false);
    }
    private void BindConcessionPPGroup()
    {
        DataSet ds = AccountController.GetallPPgroup(1, "", "");
        BindDDL(ddlproductheaderconcession, ds, "pricing_procedure_name", "pricing_procedure_code");
        ddlproductheaderconcession.Items.Insert(0, "Select");
        ddlproductheaderconcession.SelectedIndex = 0;
    }
    protected void ddlproductheaderconcession_SelectedIndexChanged(object sender, System.EventArgs e)
    {
        BindConcessiontype();
        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "k2", "<script type=\"text/javascript\">$(function () { $('#Concessionreq').modal('show') });</script>", false);
    }

    private void BindConcessiontype()
    {
        int Flag = 2;
        string Requesttype = "";
        if (lblstdstaus.Text == "Student Status : Pending")
        {
            Requesttype = "RQ02";
        }
        else if (lblstdstaus.Text == "Student Status : Confirmed")
        {
            Requesttype = "RQ06";
        }
        string PPgroup = "";
        PPgroup = ddlproductheaderconcession.SelectedValue;
        DataSet ds = AccountController.GetallPPgroup(Flag, Requesttype, PPgroup);
        BindDDL(ddlconcessiontype, ds, "voucher_description", "voucher_type");
        ddlconcessiontype.Items.Insert(0, "Select");
        ddlconcessiontype.SelectedIndex = 0;
    }

    protected void btnsaveconcreq_ServerClick(object sender, System.EventArgs e)
    {
        int Flag = 0;
        string Requesttypecode = "";
        string Sbentrycode = "";
        string Conditiontype = "";
        string CenterRemarks = "";
        decimal CenterRequestamt = 0;
        int Levelno = 0;
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        Sbentrycode = txtcursbcode.Text;

        Flag = 1;
        if (lblstdstaus.Text == "Student Status : Pending")
        {
            Requesttypecode = "RQ02";
        }
        else if (lblstdstaus.Text == "Student Status : Confirmed")
        {
            Requesttypecode = "RQ06";
        }
        //Requesttypecode = "RQ02"
        Conditiontype = "";
        CenterRemarks = "";
        CenterRequestamt = 0;
        Levelno = 1;

        //Dim Checkforrequest As String = AccountController.Insertrequest(Flag, Requesttypecode, Sbentrycode, Conditiontype, CenterRemarks,
        //                                                         CenterRequestamt, Levelno, UserID)
        //If Checkforrequest = "0" Then
        //    divreqerrmessage1.Visible = True
        //    divreqsucmessage1.Visible = False
        //    lblerrorreq1.Visible = True
        //    lblerrorreq1.Text = "Request Already exists for this student"
        //    ScriptManager.RegisterClientScriptBlock(Me, Me.GetType(), "k2", "<script type=""text/javascript"">$(function () { $('#message').modal('show') });</script>", False)
        //Else
        Flag = 2;
        if (lblstdstaus.Text == "Student Status : Pending")
        {
            Requesttypecode = "RQ02";
        }
        else if (lblstdstaus.Text == "Student Status : Confirmed")
        {
            Requesttypecode = "RQ06";
        }
        Conditiontype = ddlconcessiontype.SelectedValue;
        CenterRemarks = txtconceremarks.Text;
        CenterRequestamt =Convert.ToDecimal(txtconcessionamt.Text);
        Levelno = 1;
        string response = AccountController.Insertrequest(Flag, Requesttypecode, Sbentrycode, Conditiontype, CenterRemarks, CenterRequestamt, Levelno, UserID);
        divSuccessmessage.Visible = true;
        lblsuccessMessage.Visible = true;
        lblsuccessMessage.Text = "Request Successfully Stored";
        Bindrequestdetails();
        //divreqerrmessage1.Visible = False
        //divreqsucmessage1.Visible = True
        //lblsuccessreq1.Visible = True
        //lblsuccessreq1.Text = "Request Successfully Stored"
        //ScriptManager.RegisterClientScriptBlock(Me, Me.GetType(), "k2", "<script type=""text/javascript"">$(function () { $('#message').modal('show') });</script>", False)

        //End If
    }
    protected void btnclosemodalconc_ServerClick(object sender, System.EventArgs e)
    {
        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "k2", "<script type=\"text/javascript\">$(function () { $('#Concessionreq').modal('hide') });</script>", false);
    }

    protected void btnclosemodalconc1_ServerClick(object sender, System.EventArgs e)
    {
        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "k2", "<script type=\"text/javascript\">$(function () { $('#Concessionreq').modal('hide') });</script>", false);
    }





    ///''''''''''''''''''''''''''''''''Waiver Request''''''''''''''''''''''''''''''''''''''''''''''''
    //Waiver

    protected void awaiverreq_ServerClick(object sender, System.EventArgs e)
    {
        //Bindwaivertype()
        txtwaiverrequestdate.Text = DateTime.Now.ToString("dd-MM-yyyy");
        BindWaiverPPGroup();
        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "k2", "<script type=\"text/javascript\">$(function () { $('#Waiver').modal('show') });</script>", false);
    }
    private void BindWaiverPPGroup()
    {
        DataSet ds = AccountController.GetallPPgroup(1, "", "");
        BindDDL(ddlproductheaderwaiver, ds, "pricing_procedure_name", "pricing_procedure_code");
        ddlproductheaderwaiver.Items.Insert(0, "Select");
        ddlproductheaderwaiver.SelectedIndex = 0;
    }
    protected void ddlproductheaderwaiver_SelectedIndexChanged(object sender, System.EventArgs e)
    {
        Bindwaivertype();
    }

    private void Bindwaivertype()
    {
        int Flag = 2;
        string Requesttype = "";
        if (lblstdstaus.Text == "Student Status : Pending")
        {
            Requesttype = "RQ09";
        }
        else if (lblstdstaus.Text == "Student Status : Confirmed")
        {
            Requesttype = "RQ10";
        }
        string PPgroup = "";
        PPgroup = ddlproductheaderwaiver.SelectedValue;
        DataSet ds = AccountController.GetallPPgroup(Flag, Requesttype, PPgroup);
        BindDDL(ddlwaivertype, ds, "voucher_description", "voucher_type");
        ddlwaivertype.Items.Insert(0, "Select");
        ddlwaivertype.SelectedIndex = 0;
    }
    protected void btnsavewaiver_ServerClick(object sender, System.EventArgs e)
    {
        int Flag = 0;
        string Requesttypecode = "";
        string Sbentrycode = "";
        string Conditiontype = "";
        string CenterRemarks = "";
        decimal CenterRequestamt = 0;
        int Levelno = 0;
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        Sbentrycode = txtcursbcode.Text;

        Flag = 1;
        if (lblstdstaus.Text == "Student Status : Pending")
        {
            Requesttypecode = "RQ09";
        }
        else if (lblstdstaus.Text == "Student Status : Confirmed")
        {
            Requesttypecode = "RQ10";
        }
        //Requesttypecode = "RQ04"
        Conditiontype = ddlwaivertype.SelectedValue;
        CenterRemarks = txtwaiverremark.Text;
        CenterRequestamt = 0;
        Levelno = 1;

        //Dim Checkforrequest As String = AccountController.Insertrequest(Flag, Requesttypecode, Sbentrycode, Conditiontype, CenterRemarks,
        //                                                         CenterRequestamt, Levelno, UserID)
        //If Checkforrequest = "0" Then
        //    divreqerrmessage1.Visible = True
        //    divreqsucmessage1.Visible = False
        //    lblerrorreq1.Visible = True
        //    lblerrorreq1.Text = "Request Already exists for this student"
        //    ScriptManager.RegisterClientScriptBlock(Me, Me.GetType(), "k2", "<script type=""text/javascript"">$(function () { $('#message').modal('show') });</script>", False)
        //Else
        Flag = 2;
        if (lblstdstaus.Text == "Student Status : Pending")
        {
            Requesttypecode = "RQ09";
            Conditiontype = ddlwaivertype.SelectedValue;
        }
        else if (lblstdstaus.Text == "Student Status : Confirmed")
        {
            Requesttypecode = "RQ10";
            Conditiontype = ddlwaivertype.SelectedValue;
        }

        //Requesttypecode = "RQ04"

        CenterRemarks = txtwaiverremark.Text;
        CenterRequestamt =Convert.ToDecimal(txtwaiveramt.Text);
        Levelno = 1;
        string response = AccountController.Insertrequest(Flag, Requesttypecode, Sbentrycode, Conditiontype, CenterRemarks, CenterRequestamt, Levelno, UserID);
        divSuccessmessage.Visible = true;
        lblsuccessMessage.Visible = true;
        lblsuccessMessage.Text = "Request Successfully Stored";
        Bindrequestdetails();
        //divreqerrmessage1.Visible = False
        //divreqsucmessage1.Visible = True
        //lblsuccessreq1.Visible = True
        //lblsuccessreq1.Text = "Request Successfully Stored"
        //ScriptManager.RegisterClientScriptBlock(Me, Me.GetType(), "k2", "<script type=""text/javascript"">$(function () { $('#message').modal('show') });</script>", False)

        //End If
    }

    protected void btnclosewaiver_ServerClick(object sender, System.EventArgs e)
    {
        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "k2", "<script type=\"text/javascript\">$(function () { $('#Waiver').modal('hide') });</script>", false);
    }

    protected void btnclosewaiver1_ServerClick(object sender, System.EventArgs e)
    {
        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "k2", "<script type=\"text/javascript\">$(function () { $('#Waiver').modal('hide') });</script>", false);
    }

    ///'''''''''''''''''''''''''''''''''''Refund''''''''''''''''''''''''''''''''''''''''''''''

    protected void arefundrequest_ServerClick(object sender, System.EventArgs e)
    {
        txtrefunddate.Text = DateTime.Now.ToString("dd-MM-yyyy");
        BindRefundPPGroup();
        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "k2", "<script type=\"text/javascript\">$(function () { $('#Refund').modal('show') });</script>", false);
    }
    private void BindRefundPPGroup()
    {
        DataSet ds = AccountController.GetallPPgroup(1, "", "");
        BindDDL(ddlproductheaderrefund, ds, "pricing_procedure_name", "pricing_procedure_code");
        ddlproductheaderrefund.Items.Insert(0, "Select");
        ddlproductheaderrefund.SelectedIndex = 0;
    }
    protected void ddlproductheaderrefund_SelectedIndexChanged(object sender, System.EventArgs e)
    {
        Bindrefundtype();
    }


    private void Bindrefundtype()
    {
        int Flag = 2;
        string Requesttype = "";
        if (lblstdstaus.Text == "Student Status : Pending")
        {
            Requesttype = "RQ04";
        }
        else if (lblstdstaus.Text == "Student Status : Confirmed")
        {
            Requesttype = "RQ04";
        }
        string PPgroup = "";
        PPgroup = ddlproductheaderrefund.SelectedValue;
        DataSet ds = AccountController.GetallPPgroup(Flag, Requesttype, PPgroup);
        BindDDL(ddlrefundtype, ds, "voucher_description", "voucher_type");
        ddlrefundtype.Items.Insert(0, "Select");
        ddlrefundtype.SelectedIndex = 0;

    }

    protected void btnrefundclose_ServerClick(object sender, System.EventArgs e)
    {
        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "k2", "<script type=\"text/javascript\">$(function () { $('#Refund').modal('hide') });</script>", false);
    }

    protected void btnrefundclose1_ServerClick(object sender, System.EventArgs e)
    {
        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "k2", "<script type=\"text/javascript\">$(function () { $('#Refund').modal('hide') });</script>", false);
    }

    protected void Btnrefundsave_ServerClick(object sender, System.EventArgs e)
    {
        int Flag = 0;
        string Requesttypecode = "";
        string Sbentrycode = "";
        string Conditiontype = "";
        string CenterRemarks = "";
        decimal CenterRequestamt = 0;
        int Levelno = 0;
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        Sbentrycode = txtcursbcode.Text;

        Flag = 1;
        if (lblstdstaus.Text == "Student Status : Pending")
        {
            Requesttypecode = "RQ04";
        }
        else if (lblstdstaus.Text == "Student Status : Confirmed")
        {
            Requesttypecode = "RQ04";
        }
        //Requesttypecode = "RQ04"
        Conditiontype = ddlrefundtype.SelectedValue;
        CenterRemarks = txtrefundcenter.Text;
        CenterRequestamt = 0;
        Levelno = 1;

        //Dim Checkforrequest As String = AccountController.Insertrequest(Flag, Requesttypecode, Sbentrycode, Conditiontype, CenterRemarks,
        //                                                         CenterRequestamt, Levelno, UserID)
        //If Checkforrequest = "0" Then
        //    divreqerrmessage1.Visible = True
        //    divreqsucmessage1.Visible = False
        //    lblerrorreq1.Visible = True
        //    lblerrorreq1.Text = "Request Already exists for this student"
        //    ScriptManager.RegisterClientScriptBlock(Me, Me.GetType(), "k2", "<script type=""text/javascript"">$(function () { $('#message').modal('show') });</script>", False)
        //Else
        Flag = 2;
        if (lblstdstaus.Text == "Student Status : Pending")
        {
            Requesttypecode = "RQ04";
            Conditiontype = ddlrefundtype.SelectedValue;
        }
        else if (lblstdstaus.Text == "Student Status : Confirmed")
        {
            Requesttypecode = "RQ04";
            Conditiontype = ddlrefundtype.SelectedValue;
        }

        //Requesttypecode = "RQ04"

        CenterRemarks = txtrefundcenter.Text;
        CenterRequestamt = txtrefundamount.Text;
        Levelno = 1;
        string response = AccountController.Insertrequest(Flag, Requesttypecode, Sbentrycode, Conditiontype, CenterRemarks, CenterRequestamt, Levelno, UserID);
        divSuccessmessage.Visible = true;
        lblsuccessMessage.Visible = true;
        lblsuccessMessage.Text = "Request Successfully Stored";
        Bindrequestdetails();
        //divreqerrmessage1.Visible = False
        //divreqsucmessage1.Visible = True
        //lblsuccessreq1.Visible = True
        //lblsuccessreq1.Text = "Request Successfully Stored"
        //ScriptManager.RegisterClientScriptBlock(Me, Me.GetType(), "k2", "<script type=""text/javascript"">$(function () { $('#message').modal('show') });</script>", False)

        //End If
    }


    //For Admission Cancellation

    protected void acanceladdmission_ServerClick(object sender, System.EventArgs e)
    {
        txtcanceldate.Text = DateTime.Now.ToString("dd-MM-yyyy");
        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "k2", "<script type=\"text/javascript\">$(function () { $('#AdmissionCancel').modal('show') });</script>", false);
    }

    protected void btncancelsave_ServerClick(object sender, System.EventArgs e)
    {
        int Flag = 0;
        string Requesttypecode = "";
        string Sbentrycode = "";
        string Conditiontype = "";
        string CenterRemarks = "";
        decimal CenterRequestamt = 0;
        int Levelno = 0;
        HttpCookie cookie = Request.Cookies.Get("MyCookiesLoginInfo");
        string UserID = cookie.Values["UserID"];
        string UserName = cookie.Values["UserName"];
        Sbentrycode = txtcursbcode.Text;

        Flag = 1;
        if (lblstdstaus.Text == "Student Status : Pending")
        {
            Requesttypecode = "RQ03";
        }
        else if (lblstdstaus.Text == "Student Status : Confirmed")
        {
            Requesttypecode = "RQ07";
        }

        Conditiontype = "";
        CenterRemarks = "";
        CenterRequestamt = 0;
        Levelno = 1;

        //Dim Checkforrequest As String = AccountController.Insertrequest(Flag, Requesttypecode, Sbentrycode, Conditiontype, CenterRemarks,
        //                                                         CenterRequestamt, Levelno, UserID)
        //If Checkforrequest = "0" Then
        //    divreqerrmessage1.Visible = True
        //    divreqsucmessage1.Visible = False
        //    lblerrorreq1.Visible = True
        //    lblerrorreq1.Text = "Request Already exists for this student"
        //    ScriptManager.RegisterClientScriptBlock(Me, Me.GetType(), "k2", "<script type=""text/javascript"">$(function () { $('#message').modal('show') });</script>", False)
        //Else
        Flag = 2;
        if (lblstdstaus.Text == "Student Status : Pending")
        {
            Requesttypecode = "RQ03";
            Conditiontype = "AC01";
        }
        else if (lblstdstaus.Text == "Student Status : Confirmed")
        {
            Requesttypecode = "RQ07";
            Conditiontype = "AC02";
        }
        //Requesttypecode = "RQ03"
        CenterRemarks = txtcancelcenterremarks.Text;
        CenterRequestamt = 0;
        Levelno = 1;
        string response = AccountController.Insertrequest(Flag, Requesttypecode, Sbentrycode, Conditiontype, CenterRemarks, CenterRequestamt, Levelno, UserID);
        divSuccessmessage.Visible = true;
        lblsuccessMessage.Visible = true;
        lblsuccessMessage.Text = "Request Successfully Stored";
        Bindrequestdetails();
        //divreqerrmessage1.Visible = False
        //divreqsucmessage1.Visible = True
        //lblsuccessreq1.Visible = True
        //lblsuccessreq1.Text = "Request Successfully Stored"
        //ScriptManager.RegisterClientScriptBlock(Me, Me.GetType(), "k2", "<script type=""text/javascript"">$(function () { $('#message').modal('show') });</script>", False)

        //End If
    }
    protected void btncancelclose_ServerClick(object sender, System.EventArgs e)
    {
        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "k2", "<script type=\"text/javascript\">$(function () { $('#AdmissionCancel').modal('hide') });</script>", false);
    }

    protected void btncancelclose1_ServerClick(object sender, System.EventArgs e)
    {
        ScriptManager.RegisterClientScriptBlock(this, this.GetType(), "k2", "<script type=\"text/javascript\">$(function () { $('#AdmissionCancel').modal('hide') });</script>", false);
    }


}